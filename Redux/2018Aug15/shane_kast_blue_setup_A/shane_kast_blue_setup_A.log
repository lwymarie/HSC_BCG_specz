------------------------------------------------------

This log was generated with version 0.8.2dev of PYPIT

You are using scipy version=1.0.0
You are using numpy version=1.14.0
You are using astropy version=3.0.4

------------------------------------------------------

[INFO]    :: util.py 431 parse_pypeit_file() - Loading the reduction file
[INFO]    :: util.py 456 parse_pypeit_file() - Found 38 raw data frames
[INFO]    :: util.py 468 parse_pypeit_file() - Input file loaded successfully
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b101.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b101.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b102.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b102.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b103.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b103.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b104.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b104.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b116.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b116.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b117.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b117.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b118.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b118.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b119.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b119.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b120.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b120.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b121.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b121.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b122.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b122.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b123.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b123.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b124.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b124.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b125.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b125.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b126.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b126.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b105.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b105.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b106.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b106.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b107.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b107.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b108.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b108.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b109.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b109.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b110.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b110.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b111.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b111.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b112.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b112.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b113.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b113.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b114.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b114.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b115.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b115.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b128.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b128.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b129.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b129.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b130.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b130.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b131.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b131.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b132.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b132.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b133.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b133.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b134.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b134.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b135.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b135.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b136.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b136.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b137.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b137.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b127.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b127.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b138.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug15/b138.fits
[INFO]    :: load.py 142 load_headers() - Checking spectrograph settings for required header information
[INFO]    :: load.py 153 load_headers() - Headers loaded for 38 files successfully
[INFO]    :: fsort.py 103 type_data() - Typing files
[INFO]    :: pypeitsetup.py 326 type_data() - Adding file type information to the fitstbl
[INFO]    :: fsort.py 856 match_to_science() - Matching calibrations to Science frames
[INFO]    :: fsort.py 864 match_to_science() - =================================================
[INFO]    :: fsort.py 866 match_to_science() - Matching calibrations to J1616+4410: b128.fits
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 arc frame for J1616+4410 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 bias frame for J1616+4410 (5 required)
[INFO]    :: fsort.py 879 match_to_science() -   Dark frames not required.  Not matching..
[INFO]    :: fsort.py 897 match_to_science() -    No pinhole frames are required.  Not matching..
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 pixelflat frame for J1616+4410 (5 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 2 standard frame for J1616+4410 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 trace frame for J1616+4410 (5 required)
[INFO]    :: fsort.py 864 match_to_science() - =================================================
[INFO]    :: fsort.py 866 match_to_science() - Matching calibrations to J1616+4410: b129.fits
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 arc frame for J1616+4410 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 bias frame for J1616+4410 (5 required)
[INFO]    :: fsort.py 879 match_to_science() -   Dark frames not required.  Not matching..
[INFO]    :: fsort.py 897 match_to_science() -    No pinhole frames are required.  Not matching..
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 pixelflat frame for J1616+4410 (5 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 2 standard frame for J1616+4410 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 trace frame for J1616+4410 (5 required)
[INFO]    :: fsort.py 864 match_to_science() - =================================================
[INFO]    :: fsort.py 866 match_to_science() - Matching calibrations to J1616+4410: b130.fits
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 arc frame for J1616+4410 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 bias frame for J1616+4410 (5 required)
[INFO]    :: fsort.py 879 match_to_science() -   Dark frames not required.  Not matching..
[INFO]    :: fsort.py 897 match_to_science() -    No pinhole frames are required.  Not matching..
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 pixelflat frame for J1616+4410 (5 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 2 standard frame for J1616+4410 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 trace frame for J1616+4410 (5 required)
[INFO]    :: fsort.py 864 match_to_science() - =================================================
[INFO]    :: fsort.py 866 match_to_science() - Matching calibrations to J1625+4405: b131.fits
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 arc frame for J1625+4405 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 bias frame for J1625+4405 (5 required)
[INFO]    :: fsort.py 879 match_to_science() -   Dark frames not required.  Not matching..
[INFO]    :: fsort.py 897 match_to_science() -    No pinhole frames are required.  Not matching..
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 pixelflat frame for J1625+4405 (5 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 2 standard frame for J1625+4405 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 trace frame for J1625+4405 (5 required)
[INFO]    :: fsort.py 864 match_to_science() - =================================================
[INFO]    :: fsort.py 866 match_to_science() - Matching calibrations to J1625+4405: b132.fits
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 arc frame for J1625+4405 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 bias frame for J1625+4405 (5 required)
[INFO]    :: fsort.py 879 match_to_science() -   Dark frames not required.  Not matching..
[INFO]    :: fsort.py 897 match_to_science() -    No pinhole frames are required.  Not matching..
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 pixelflat frame for J1625+4405 (5 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 2 standard frame for J1625+4405 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 trace frame for J1625+4405 (5 required)
[INFO]    :: fsort.py 864 match_to_science() - =================================================
[INFO]    :: fsort.py 866 match_to_science() - Matching calibrations to J1625+4405: b133.fits
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 arc frame for J1625+4405 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 bias frame for J1625+4405 (5 required)
[INFO]    :: fsort.py 879 match_to_science() -   Dark frames not required.  Not matching..
[INFO]    :: fsort.py 897 match_to_science() -    No pinhole frames are required.  Not matching..
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 pixelflat frame for J1625+4405 (5 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 2 standard frame for J1625+4405 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 trace frame for J1625+4405 (5 required)
[INFO]    :: fsort.py 864 match_to_science() - =================================================
[INFO]    :: fsort.py 866 match_to_science() - Matching calibrations to J1625+4405: b134.fits
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 arc frame for J1625+4405 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 bias frame for J1625+4405 (5 required)
[INFO]    :: fsort.py 879 match_to_science() -   Dark frames not required.  Not matching..
[INFO]    :: fsort.py 897 match_to_science() -    No pinhole frames are required.  Not matching..
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 pixelflat frame for J1625+4405 (5 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 2 standard frame for J1625+4405 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 trace frame for J1625+4405 (5 required)
[INFO]    :: fsort.py 864 match_to_science() - =================================================
[INFO]    :: fsort.py 866 match_to_science() - Matching calibrations to J2240+0132: b135.fits
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 arc frame for J2240+0132 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 bias frame for J2240+0132 (5 required)
[INFO]    :: fsort.py 879 match_to_science() -   Dark frames not required.  Not matching..
[INFO]    :: fsort.py 897 match_to_science() -    No pinhole frames are required.  Not matching..
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 pixelflat frame for J2240+0132 (5 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 2 standard frame for J2240+0132 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 trace frame for J2240+0132 (5 required)
[INFO]    :: fsort.py 864 match_to_science() - =================================================
[INFO]    :: fsort.py 866 match_to_science() - Matching calibrations to J2240+0132: b136.fits
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 arc frame for J2240+0132 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 bias frame for J2240+0132 (5 required)
[INFO]    :: fsort.py 879 match_to_science() -   Dark frames not required.  Not matching..
[INFO]    :: fsort.py 897 match_to_science() -    No pinhole frames are required.  Not matching..
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 pixelflat frame for J2240+0132 (5 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 2 standard frame for J2240+0132 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 trace frame for J2240+0132 (5 required)
[INFO]    :: fsort.py 864 match_to_science() - =================================================
[INFO]    :: fsort.py 866 match_to_science() - Matching calibrations to J2240+0132: b137.fits
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 arc frame for J2240+0132 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 bias frame for J2240+0132 (5 required)
[INFO]    :: fsort.py 879 match_to_science() -   Dark frames not required.  Not matching..
[INFO]    :: fsort.py 897 match_to_science() -    No pinhole frames are required.  Not matching..
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 pixelflat frame for J2240+0132 (5 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 2 standard frame for J2240+0132 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 11 trace frame for J2240+0132 (5 required)
[INFO]    :: fsort.py 941 match_to_science() - Science frames successfully matched to calibration frames
[INFO]    :: fsort.py 1116 make_dirs() - Creating Science directory
[INFO]    :: fsort.py 1119 make_dirs() - The following directory already exists:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug15/Science
[WARNING] :: fsort.py 1127 make_dirs() - Any previous calibration files may be overwritten
[INFO]    :: fsort.py 1139 make_dirs() - Creating Object directories
[INFO]    :: fsort.py 1177 make_dirs() - Creating Master Calibrations directory
[INFO]    :: fsort.py 1199 make_dirs() - Creating QA directory
[INFO]    :: pypeit.py 113 PypeIt() - Data reduction will be performed using PYPIT-ARMS
[INFO]    :: arms.py 102 ARMS() - Reducing file b128.fits, target J1616+4410
[INFO]    :: arms.py 114 ARMS() - Working on detector 1
[WARNING] :: processimages.py 441 process() - Your images have not been bias subtracted!
[INFO]    :: combine.py 62 comb_frames() - Combining 5 bias frames
[WORK IN ]::
[PROGRESS]:: combine.py 66 comb_frames() - lscomb feature has not been included here yet...
[INFO]    :: combine.py 95 comb_frames() - Finding saturated and non-linear pixels
[INFO]    :: combine.py 119 comb_frames() - Rejecting cosmic rays
[INFO]    :: combine.py 163 comb_frames() - Not rejecting any low/high pixels
[INFO]    :: combine.py 171 comb_frames() - Rejecting deviant pixels
[INFO]    :: combine.py 188 comb_frames() - Combining frames with a weightmean operation
[INFO]    :: combine.py 201 comb_frames() - Replacing completely masked pixels with the maxnonsat value of the input frames
[INFO]    :: combine.py 215 comb_frames() - 5 bias frames combined successfully!
[INFO]    :: masters.py 314 save_master() - Saving master bias frame as:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug15/MF_shane_kast_blue/MasterBias_A_01_aa.fits
[INFO]    :: masters.py 332 save_master() - Writing header information
[INFO]    :: masters.py 347 save_master() - Master bias frame saved successfully:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug15/MF_shane_kast_blue/MasterBias_A_01_aa.fits
[INFO]    :: calibrations.py 195 get_arc() - Preparing a master arc frame
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[INFO]    :: masters.py 314 save_master() - Saving master arc frame as:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug15/MF_shane_kast_blue/MasterArc_A_01_aa.fits
[INFO]    :: masters.py 332 save_master() - Writing header information
[INFO]    :: masters.py 347 save_master() - Master arc frame saved successfully:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug15/MF_shane_kast_blue/MasterArc_A_01_aa.fits
[INFO]    :: pixels.py 37 gen_pixloc() - Deriving physical pixel locations on the detector
[INFO]    :: pixels.py 40 gen_pixloc() - Pixel gap in the dispersion direction = 0.000
[INFO]    :: pixels.py 41 gen_pixloc() - Pixel size in the dispersion direction = 1.000
[INFO]    :: pixels.py 44 gen_pixloc() - Pixel gap in the spatial direction = 0.000
[INFO]    :: pixels.py 45 gen_pixloc() - Pixel size in the spatial direction = 1.000
[INFO]    :: pixels.py 50 gen_pixloc() - Saving pixel locations
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[INFO]    :: combine.py 62 comb_frames() - Combining 5 trace_image frames
[WORK IN ]::
[PROGRESS]:: combine.py 66 comb_frames() - lscomb feature has not been included here yet...
[INFO]    :: combine.py 95 comb_frames() - Finding saturated and non-linear pixels
[INFO]    :: combine.py 119 comb_frames() - Rejecting cosmic rays
[INFO]    :: combine.py 163 comb_frames() - Not rejecting any low/high pixels
[INFO]    :: combine.py 171 comb_frames() - Rejecting deviant pixels
[INFO]    :: combine.py 188 comb_frames() - Combining frames with a weightmean operation
[INFO]    :: combine.py 201 comb_frames() - Replacing completely masked pixels with the maxnonsat value of the input frames
[INFO]    :: combine.py 215 comb_frames() - 5 trace_image frames combined successfully!
[WARNING] :: procimg.py 456 gain_frame() - Should probably be measuring the gain across the amplifier boundary
[INFO]    :: trace_slits.py 813 edgearr_from_binarr() - Detecting slit edges in the mstrace image
[INFO]    :: trace_slits.py 874 edgearr_from_binarr() - Applying bad pixel mask
[INFO]    :: trace_slits.py 933 edgearr_add_left_right() - 1 left edge and 1 right edge were found in the trace
[INFO]    :: trace_slits.py 960 edgearr_add_left_right() - Assigning slit edge traces
[INFO]    :: traceslits.py 371 _assign_edges() - Assigning left slit edges
[INFO]    :: traceslits.py 379 _assign_edges() - Assigning right slit edges
[INFO]    :: trace_slits.py 1157 edgearr_final_left_right() - 1 left edge and 1 right edge were found in the trace
[INFO]    :: trace_slits.py 560 edgearr_tcrude() - Crude tracing the edges
[INFO]    :: trace_slits.py 1309 fit_edges() - Fitting left slit traces
[INFO]    :: trace_slits.py 1311 fit_edges() - Fitting right slit traces
[INFO]    :: traceslits.py 404 _chk_for_longslit() - Only one slit was identified. Should be a longslit.
[INFO]    :: traceslits.py 531 _make_pixel_arrays() - Converting physical trace locations to nearest pixel
[INFO]    :: traceslits.py 538 _make_pixel_arrays() - Identifying the pixels belonging to each slit
[INFO]    :: traceslits.py 921 save_master() - Wrote TraceSlit arrays to /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug15/MF_shane_kast_blue/MasterTrace_A_01_aa.fits
[INFO]    :: traceslits.py 923 save_master() - gzip compressing /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug15/MF_shane_kast_blue/MasterTrace_A_01_aa.fits
[INFO]    :: traceslits.py 937 save_master() - Writing TraceSlit dict to /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug15/MF_shane_kast_blue/MasterTrace_A_01_aa.json
[INFO]    :: arc.py 114 get_censpec() - Extracting an approximate arc spectrum at the centre of each slit
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[INFO]    :: arc.py 69 setup_param() - Loading line list using CdI,HgI,HeI lamps
[INFO]    :: ararclines.py 67 load_arcline_list() - Rejecting select CdI lines
[WARNING] :: ararclines.py 99 reject_lines() - Am not sure this method does anything for real -- JXP 03-Jul-2018
[INFO]    :: ararclines.py 67 load_arcline_list() - Rejecting select HgI lines
[WARNING] :: ararclines.py 99 reject_lines() - Am not sure this method does anything for real -- JXP 03-Jul-2018
[INFO]    :: ararclines.py 75 load_arcline_list() - Cutting down line list by wvmnx: 2900,6000
[INFO]    :: masters.py 314 save_master() - Saving master wv_calib frame as:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug15/MF_shane_kast_blue/MasterWaveCalib_A_01_aa.json
[INFO]    :: masters.py 347 save_master() - Master wv_calib frame saved successfully:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug15/MF_shane_kast_blue/MasterWaveCalib_A_01_aa.json
[INFO]    :: arc.py 114 get_censpec() - Extracting an approximate arc spectrum at the centre of each slit
[WORK IN ]::
[PROGRESS]:: tracewave.py 200 trace_tilt() - Detecting lines for slit 1
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: tracewave.py 264 trace_tilt() - Modelling arc line tilts with 10 arc lines
[WORK IN ]::
[PROGRESS]:: tracewave.py 270 trace_tilt() - This next step could be multiprocessed to speed up the reduction
[INFO]    :: tracewave.py 444 trace_tilt() - Completed spectral tilt tracing
[INFO]    :: tracewave.py 780 fit_tilts() - Fitting tilts with a low order, 2D legendre
[WORK IN ]::
[PROGRESS]:: utils.py 747 polyfit2d_general() - Generalize to different polynomial types
[INFO]    :: tracewave.py 797 fit_tilts() - RMS (pixels): 0.0039364226982960375
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[INFO]    :: combine.py 62 comb_frames() - Combining 5 pixelflat frames
[WORK IN ]::
[PROGRESS]:: combine.py 66 comb_frames() - lscomb feature has not been included here yet...
[INFO]    :: combine.py 95 comb_frames() - Finding saturated and non-linear pixels
[INFO]    :: combine.py 119 comb_frames() - Rejecting cosmic rays
[INFO]    :: combine.py 163 comb_frames() - Not rejecting any low/high pixels
[INFO]    :: combine.py 171 comb_frames() - Rejecting deviant pixels
[INFO]    :: combine.py 188 comb_frames() - Combining frames with a weightmean operation
[INFO]    :: combine.py 201 comb_frames() - Replacing completely masked pixels with the maxnonsat value of the input frames
[INFO]    :: combine.py 215 comb_frames() - 5 pixelflat frames combined successfully!
[WARNING] :: procimg.py 456 gain_frame() - Should probably be measuring the gain across the amplifier boundary
[INFO]    :: flatfield.py 285 run() - Setting pixels outside of slits to 1. in the flat.
[INFO]    :: masters.py 314 save_master() - Saving master pixelflat frame as:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug15/MF_shane_kast_blue/MasterFlatField_A_01_aa.fits
[INFO]    :: masters.py 332 save_master() - Writing header information
[INFO]    :: masters.py 347 save_master() - Master pixelflat frame saved successfully:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug15/MF_shane_kast_blue/MasterFlatField_A_01_aa.fits
[INFO]    :: masters.py 314 save_master() - Saving master pixelflat frame as:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug15/MF_shane_kast_blue/MasterSlitProfile_A_01_aa.fits
[INFO]    :: masters.py 332 save_master() - Writing header information
[INFO]    :: masters.py 347 save_master() - Master pixelflat frame saved successfully:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug15/MF_shane_kast_blue/MasterSlitProfile_A_01_aa.fits
[INFO]    :: masters.py 314 save_master() - Saving master wave frame as:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug15/MF_shane_kast_blue/MasterWave_A_01_aa.fits
[INFO]    :: masters.py 332 save_master() - Writing header information
[INFO]    :: masters.py 347 save_master() - Master wave frame saved successfully:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug15/MF_shane_kast_blue/MasterWave_A_01_aa.fits
[INFO]    :: arms.py 158 ARMS() - Working on the science frame
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[WARNING] :: procimg.py 456 gain_frame() - Should probably be measuring the gain across the amplifier boundary
[INFO]    :: processimages.py 509 build_rawvarframe() - Generate raw variance frame (from detected counts [flat fielded])
[INFO]    :: procimg.py 235 lacosmic() - Detecting cosmic rays with the L.A.Cosmic algorithm
[INFO]    :: procimg.py 259 lacosmic() - Convolving image with Laplacian kernel
[INFO]    :: procimg.py 267 lacosmic() - Creating noise model
[INFO]    :: procimg.py 274 lacosmic() - Calculating Laplacian signal to noise ratio
[INFO]    :: procimg.py 282 lacosmic() - Selecting candidate cosmic rays
[INFO]    :: procimg.py 287 lacosmic() -   795 candidate pixels
[INFO]    :: procimg.py 297 lacosmic() - Building fine structure image
[INFO]    :: procimg.py 306 lacosmic() - Removing suspected compact bright objects
[INFO]    :: procimg.py 316 lacosmic() -   774 remaining candidate pixels
[INFO]    :: procimg.py 320 lacosmic() - Finding neighboring pixels affected by cosmic rays
[INFO]    :: procimg.py 341 lacosmic() -  1421 pixels detected as cosmics
[INFO]    :: procimg.py 350 lacosmic() - Iteration 1 -- 1421 pixels identified as cosmic rays (1421 new)
[WORK IN ]::
[PROGRESS]:: procimg.py 353 lacosmic() - The following algorithm would be better on the rectified, tilts-corrected image
[INFO]    :: procimg.py 365 lacosmic() - Growing cosmic ray mask by 1 pixel
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=618774 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.001        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.001, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=618774 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.096     2839        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.049     2936        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.048     2950        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.048     2953        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   1.047     2954        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 6   1.047     2954        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  6 iterations: reduced_chi =    1.047, rejected =    2954, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 400 trace_objects_in_slit() - Found 2 objects
[INFO]    :: artrace.py 401 trace_objects_in_slit() - Tracing 2 objects
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 448 trace_objects_in_slit() - Converting object traces to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 2 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=577850 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.001        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.001, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=577850 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.085     2229        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.046     2302        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.045     2317        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.044     2321        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   1.044     2325        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 6   1.044     2327        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 7   1.044     2327        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  7 iterations: reduced_chi =    1.044, rejected =    2327, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 400 trace_objects_in_slit() - Found 2 objects
[INFO]    :: artrace.py 401 trace_objects_in_slit() - Tracing 2 objects
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 448 trace_objects_in_slit() - Converting object traces to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 2 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 275 boxcar() - Performing boxcar extraction
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 1/2 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 2/2 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: scienceimage.py 358 extraction() - Update model variance image (and trace?) and repeat
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[WORK IN ]::
[PROGRESS]:: wave.py 275 flexure_obj() - Consider doing 2 passes in flexure as in LowRedux
[INFO]    :: wave.py 291 flexure_obj() - Working on flexure in slit (if an object was detected): 0
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=619.504
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of -0.18548 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 189.09373961008302 .. 187.39936044743004
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 189.09373961008302 .. 187.39936044743004
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=581.445
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of -0.189443 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 109.06607702582221 .. 106.45154911037878
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 109.06607702582221 .. 106.45154911037878
[INFO]    :: arms.py 241 ARMS() - Performing a heliocentric correction
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 189.09373961008302 .. 187.39936044743004
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 189.09373961008302 .. 187.39936044743004
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 109.06607702582221 .. 106.45154911037878
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 109.06607702582221 .. 106.45154911037878
[INFO]    :: arms.py 280 ARMS() - Processing standard star
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[WARNING] :: procimg.py 456 gain_frame() - Should probably be measuring the gain across the amplifier boundary
[INFO]    :: processimages.py 509 build_rawvarframe() - Generate raw variance frame (from detected counts [flat fielded])
[INFO]    :: procimg.py 235 lacosmic() - Detecting cosmic rays with the L.A.Cosmic algorithm
[INFO]    :: procimg.py 259 lacosmic() - Convolving image with Laplacian kernel
[INFO]    :: procimg.py 267 lacosmic() - Creating noise model
[INFO]    :: procimg.py 274 lacosmic() - Calculating Laplacian signal to noise ratio
[INFO]    :: procimg.py 282 lacosmic() - Selecting candidate cosmic rays
[INFO]    :: procimg.py 287 lacosmic() -   663 candidate pixels
[INFO]    :: procimg.py 297 lacosmic() - Building fine structure image
[INFO]    :: procimg.py 306 lacosmic() - Removing suspected compact bright objects
[INFO]    :: procimg.py 316 lacosmic() -   550 remaining candidate pixels
[INFO]    :: procimg.py 320 lacosmic() - Finding neighboring pixels affected by cosmic rays
[INFO]    :: procimg.py 341 lacosmic() -  1068 pixels detected as cosmics
[INFO]    :: procimg.py 350 lacosmic() - Iteration 1 -- 1068 pixels identified as cosmic rays (1068 new)
[WORK IN ]::
[PROGRESS]:: procimg.py 353 lacosmic() - The following algorithm would be better on the rectified, tilts-corrected image
[INFO]    :: procimg.py 365 lacosmic() - Growing cosmic ray mask by 1 pixel
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=616929 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.007        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.007, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=618787 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.208     6032        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.068     6149        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.066     6153        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.066     6153        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  4 iterations: reduced_chi =    1.066, rejected =    6153, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 397 trace_objects_in_slit() - Found 1 object
[INFO]    :: artrace.py 398 trace_objects_in_slit() - Tracing 1 object
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 446 trace_objects_in_slit() - Converting object trace to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 1 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=569915 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.005        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.005, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=571692 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.126     2872        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.074     2942        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.073     2943        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.073     2943        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  4 iterations: reduced_chi =    1.073, rejected =    2943, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 275 boxcar() - Performing boxcar extraction
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 1/1 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1616+4410_KASTb_2018Aug16T042643.07.fits
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[INFO]    :: save.py 731 save_2d_images() - Wrote: Science/spec2d_J1616+4410_KASTb_2018Aug16T042643.07.fits
[INFO]    :: arms.py 102 ARMS() - Reducing file b129.fits, target J1616+4410
[INFO]    :: arms.py 114 ARMS() - Working on detector 1
[INFO]    :: calibrations.py 223 get_bias() - Reloading the bias from the internal dict
[INFO]    :: pixels.py 37 gen_pixloc() - Deriving physical pixel locations on the detector
[INFO]    :: pixels.py 40 gen_pixloc() - Pixel gap in the dispersion direction = 0.000
[INFO]    :: pixels.py 41 gen_pixloc() - Pixel size in the dispersion direction = 1.000
[INFO]    :: pixels.py 44 gen_pixloc() - Pixel gap in the spatial direction = 0.000
[INFO]    :: pixels.py 45 gen_pixloc() - Pixel size in the spatial direction = 1.000
[INFO]    :: pixels.py 50 gen_pixloc() - Saving pixel locations
[INFO]    :: arms.py 158 ARMS() - Working on the science frame
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[WARNING] :: procimg.py 456 gain_frame() - Should probably be measuring the gain across the amplifier boundary
[INFO]    :: processimages.py 509 build_rawvarframe() - Generate raw variance frame (from detected counts [flat fielded])
[INFO]    :: procimg.py 235 lacosmic() - Detecting cosmic rays with the L.A.Cosmic algorithm
[INFO]    :: procimg.py 259 lacosmic() - Convolving image with Laplacian kernel
[INFO]    :: procimg.py 267 lacosmic() - Creating noise model
[INFO]    :: procimg.py 274 lacosmic() - Calculating Laplacian signal to noise ratio
[INFO]    :: procimg.py 282 lacosmic() - Selecting candidate cosmic rays
[INFO]    :: procimg.py 287 lacosmic() -  5803 candidate pixels
[INFO]    :: procimg.py 297 lacosmic() - Building fine structure image
[INFO]    :: procimg.py 306 lacosmic() - Removing suspected compact bright objects
[INFO]    :: procimg.py 316 lacosmic() -  4720 remaining candidate pixels
[INFO]    :: procimg.py 320 lacosmic() - Finding neighboring pixels affected by cosmic rays
[INFO]    :: procimg.py 341 lacosmic() -  9590 pixels detected as cosmics
[INFO]    :: procimg.py 350 lacosmic() - Iteration 1 -- 9590 pixels identified as cosmic rays (9590 new)
[WORK IN ]::
[PROGRESS]:: procimg.py 353 lacosmic() - The following algorithm would be better on the rectified, tilts-corrected image
[INFO]    :: procimg.py 365 lacosmic() - Growing cosmic ray mask by 1 pixel
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=618341 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.003        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.003, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=618532 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.062     2864        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.013     2967        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.012     2993        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.011     3006        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   1.011     3009        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 6   1.011     3009        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  6 iterations: reduced_chi =    1.011, rejected =    3009, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 400 trace_objects_in_slit() - Found 2 objects
[INFO]    :: artrace.py 401 trace_objects_in_slit() - Tracing 2 objects
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 448 trace_objects_in_slit() - Converting object traces to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 2 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=561076 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.003        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.003, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=561252 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.039     1914        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.004     1980        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.003     1996        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.003     2006        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   1.003     2011        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 6   1.003     2015        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 7   1.003     2016        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 8   1.003     2018        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 9   1.003     2019        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                10   1.003     2020        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                11   1.002     2020        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after 11 iterations: reduced_chi =    1.002, rejected =    2020, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 400 trace_objects_in_slit() - Found 2 objects
[INFO]    :: artrace.py 401 trace_objects_in_slit() - Tracing 2 objects
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 448 trace_objects_in_slit() - Converting object traces to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 2 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 275 boxcar() - Performing boxcar extraction
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 1/2 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 2/2 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: scienceimage.py 358 extraction() - Update model variance image (and trace?) and repeat
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[WORK IN ]::
[PROGRESS]:: wave.py 275 flexure_obj() - Consider doing 2 passes in flexure as in LowRedux
[INFO]    :: wave.py 291 flexure_obj() - Working on flexure in slit (if an object was detected): 0
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=535.007
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of -0.20598 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]             
   int64                   float64                 ...                float64                
----------- -------------------------------------- ... --------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 188.7374769464114 .. 187.0818846789508
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]             
   int64                   float64                 ...                float64                
----------- -------------------------------------- ... --------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 188.7374769464114 .. 187.0818846789508
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=609.056
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of -0.210056 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 109.25712281357124 .. 106.68767468221269
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 109.25712281357124 .. 106.68767468221269
[INFO]    :: arms.py 241 ARMS() - Performing a heliocentric correction
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]             
   int64                   float64                 ...                float64                
----------- -------------------------------------- ... --------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 188.7374769464114 .. 187.0818846789508
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]             
   int64                   float64                 ...                float64                
----------- -------------------------------------- ... --------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 188.7374769464114 .. 187.0818846789508
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 109.25712281357124 .. 106.68767468221269
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 109.25712281357124 .. 106.68767468221269
[INFO]    :: arms.py 280 ARMS() - Processing standard star
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1616+4410_KASTb_2018Aug16T045806.41.fits
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[INFO]    :: save.py 731 save_2d_images() - Wrote: Science/spec2d_J1616+4410_KASTb_2018Aug16T045806.41.fits
[INFO]    :: arms.py 102 ARMS() - Reducing file b130.fits, target J1616+4410
[INFO]    :: arms.py 114 ARMS() - Working on detector 1
[INFO]    :: calibrations.py 223 get_bias() - Reloading the bias from the internal dict
[INFO]    :: pixels.py 37 gen_pixloc() - Deriving physical pixel locations on the detector
[INFO]    :: pixels.py 40 gen_pixloc() - Pixel gap in the dispersion direction = 0.000
[INFO]    :: pixels.py 41 gen_pixloc() - Pixel size in the dispersion direction = 1.000
[INFO]    :: pixels.py 44 gen_pixloc() - Pixel gap in the spatial direction = 0.000
[INFO]    :: pixels.py 45 gen_pixloc() - Pixel size in the spatial direction = 1.000
[INFO]    :: pixels.py 50 gen_pixloc() - Saving pixel locations
[INFO]    :: arms.py 158 ARMS() - Working on the science frame
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[WARNING] :: procimg.py 456 gain_frame() - Should probably be measuring the gain across the amplifier boundary
[INFO]    :: processimages.py 509 build_rawvarframe() - Generate raw variance frame (from detected counts [flat fielded])
[INFO]    :: procimg.py 235 lacosmic() - Detecting cosmic rays with the L.A.Cosmic algorithm
[INFO]    :: procimg.py 259 lacosmic() - Convolving image with Laplacian kernel
[INFO]    :: procimg.py 267 lacosmic() - Creating noise model
[INFO]    :: procimg.py 274 lacosmic() - Calculating Laplacian signal to noise ratio
[INFO]    :: procimg.py 282 lacosmic() - Selecting candidate cosmic rays
[INFO]    :: procimg.py 287 lacosmic() -  5875 candidate pixels
[INFO]    :: procimg.py 297 lacosmic() - Building fine structure image
[INFO]    :: procimg.py 306 lacosmic() - Removing suspected compact bright objects
[INFO]    :: procimg.py 316 lacosmic() -  4618 remaining candidate pixels
[INFO]    :: procimg.py 320 lacosmic() - Finding neighboring pixels affected by cosmic rays
[INFO]    :: procimg.py 341 lacosmic() -  9458 pixels detected as cosmics
[INFO]    :: procimg.py 350 lacosmic() - Iteration 1 -- 9458 pixels identified as cosmic rays (9458 new)
[WORK IN ]::
[PROGRESS]:: procimg.py 353 lacosmic() - The following algorithm would be better on the rectified, tilts-corrected image
[INFO]    :: procimg.py 365 lacosmic() - Growing cosmic ray mask by 1 pixel
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=617768 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.003        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.003, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=618389 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.078     3043        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.026     3196        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.023     3239        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.023     3258        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   1.022     3271        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 6   1.022     3276        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 7   1.022     3276        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  7 iterations: reduced_chi =    1.022, rejected =    3276, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 397 trace_objects_in_slit() - Found 1 object
[INFO]    :: artrace.py 398 trace_objects_in_slit() - Tracing 1 object
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 446 trace_objects_in_slit() - Converting object trace to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 1 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=580977 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.003        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.003, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=581566 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.057     2240        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.017     2333        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.016     2375        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.015     2399        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   1.014     2408        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 6   1.014     2412        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 7   1.014     2413        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 8   1.014     2413        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  8 iterations: reduced_chi =    1.014, rejected =    2413, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 400 trace_objects_in_slit() - Found 2 objects
[INFO]    :: artrace.py 401 trace_objects_in_slit() - Tracing 2 objects
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 448 trace_objects_in_slit() - Converting object traces to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 2 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 275 boxcar() - Performing boxcar extraction
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 1/2 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 2/2 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: scienceimage.py 358 extraction() - Update model variance image (and trace?) and repeat
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[WORK IN ]::
[PROGRESS]:: wave.py 275 flexure_obj() - Consider doing 2 passes in flexure as in LowRedux
[INFO]    :: wave.py 291 flexure_obj() - Working on flexure in slit (if an object was detected): 0
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=546.276
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of -0.29758 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 188.73075579060213 .. 187.33760356544516
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 188.73075579060213 .. 187.33760356544516
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=547.535
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of -0.300999 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]             
   int64                   float64                 ...                float64                
----------- -------------------------------------- ... --------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 268.5269362375276 .. 268.0512712104801
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]             
   int64                   float64                 ...                float64                
----------- -------------------------------------- ... --------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 268.5269362375276 .. 268.0512712104801
[INFO]    :: arms.py 241 ARMS() - Performing a heliocentric correction
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 188.73075579060213 .. 187.33760356544516
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 188.73075579060213 .. 187.33760356544516
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]             
   int64                   float64                 ...                float64                
----------- -------------------------------------- ... --------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 268.5269362375276 .. 268.0512712104801
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]             
   int64                   float64                 ...                float64                
----------- -------------------------------------- ... --------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 268.5269362375276 .. 268.0512712104801
[INFO]    :: arms.py 280 ARMS() - Processing standard star
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1616+4410_KASTb_2018Aug16T053436.04.fits
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[INFO]    :: save.py 731 save_2d_images() - Wrote: Science/spec2d_J1616+4410_KASTb_2018Aug16T053436.04.fits
[INFO]    :: arms.py 102 ARMS() - Reducing file b131.fits, target J1625+4405
[INFO]    :: arms.py 114 ARMS() - Working on detector 1
[INFO]    :: calibrations.py 223 get_bias() - Reloading the bias from the internal dict
[INFO]    :: pixels.py 37 gen_pixloc() - Deriving physical pixel locations on the detector
[INFO]    :: pixels.py 40 gen_pixloc() - Pixel gap in the dispersion direction = 0.000
[INFO]    :: pixels.py 41 gen_pixloc() - Pixel size in the dispersion direction = 1.000
[INFO]    :: pixels.py 44 gen_pixloc() - Pixel gap in the spatial direction = 0.000
[INFO]    :: pixels.py 45 gen_pixloc() - Pixel size in the spatial direction = 1.000
[INFO]    :: pixels.py 50 gen_pixloc() - Saving pixel locations
[INFO]    :: arms.py 158 ARMS() - Working on the science frame
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[WARNING] :: procimg.py 456 gain_frame() - Should probably be measuring the gain across the amplifier boundary
[INFO]    :: processimages.py 509 build_rawvarframe() - Generate raw variance frame (from detected counts [flat fielded])
[INFO]    :: procimg.py 235 lacosmic() - Detecting cosmic rays with the L.A.Cosmic algorithm
[INFO]    :: procimg.py 259 lacosmic() - Convolving image with Laplacian kernel
[INFO]    :: procimg.py 267 lacosmic() - Creating noise model
[INFO]    :: procimg.py 274 lacosmic() - Calculating Laplacian signal to noise ratio
[INFO]    :: procimg.py 282 lacosmic() - Selecting candidate cosmic rays
[INFO]    :: procimg.py 287 lacosmic() -  6176 candidate pixels
[INFO]    :: procimg.py 297 lacosmic() - Building fine structure image
[INFO]    :: procimg.py 306 lacosmic() - Removing suspected compact bright objects
[INFO]    :: procimg.py 316 lacosmic() -  4866 remaining candidate pixels
[INFO]    :: procimg.py 320 lacosmic() - Finding neighboring pixels affected by cosmic rays
[INFO]    :: procimg.py 341 lacosmic() -  9870 pixels detected as cosmics
[INFO]    :: procimg.py 350 lacosmic() - Iteration 1 -- 9870 pixels identified as cosmic rays (9870 new)
[WORK IN ]::
[PROGRESS]:: procimg.py 353 lacosmic() - The following algorithm would be better on the rectified, tilts-corrected image
[INFO]    :: procimg.py 365 lacosmic() - Growing cosmic ray mask by 1 pixel
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=617115 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.004        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.004, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=618301 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.085     3540        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.022     3723        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.019     3764        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.018     3778        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   1.018     3783        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 6   1.018     3787        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 7   1.018     3791        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 8   1.018     3794        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 9   1.018     3794        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  9 iterations: reduced_chi =    1.018, rejected =    3794, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 400 trace_objects_in_slit() - Found 2 objects
[INFO]    :: artrace.py 401 trace_objects_in_slit() - Tracing 2 objects
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 448 trace_objects_in_slit() - Converting object traces to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 2 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=553846 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.004        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.004, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=554927 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.047     2259        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.003     2363        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.000     2401        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.000     2422        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   0.999     2429        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 6   0.999     2434        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 7   0.999     2437        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 8   0.999     2438        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 9   0.999     2439        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                10   0.999     2439        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after 10 iterations: reduced_chi =    0.999, rejected =    2439, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 400 trace_objects_in_slit() - Found 2 objects
[INFO]    :: artrace.py 401 trace_objects_in_slit() - Tracing 2 objects
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 448 trace_objects_in_slit() - Converting object traces to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 2 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 275 boxcar() - Performing boxcar extraction
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 1/2 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 2/2 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: scienceimage.py 358 extraction() - Update model variance image (and trace?) and repeat
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[WORK IN ]::
[PROGRESS]:: wave.py 275 flexure_obj() - Consider doing 2 passes in flexure as in LowRedux
[INFO]    :: wave.py 291 flexure_obj() - Working on flexure in slit (if an object was detected): 0
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=567.124
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of -0.36518 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]            
   int64                   float64                 ...                float64               
----------- -------------------------------------- ... -------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 49.46473866089116 .. 48.9498530320477
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]            
   int64                   float64                 ...                float64               
----------- -------------------------------------- ... -------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 49.46473866089116 .. 48.9498530320477
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=494.682
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of -0.442796 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 186.52816542265572 .. 187.5892191267302
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 186.52816542265572 .. 187.5892191267302
[INFO]    :: arms.py 241 ARMS() - Performing a heliocentric correction
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]            
   int64                   float64                 ...                float64               
----------- -------------------------------------- ... -------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 49.46473866089116 .. 48.9498530320477
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]            
   int64                   float64                 ...                float64               
----------- -------------------------------------- ... -------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 49.46473866089116 .. 48.9498530320477
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 186.52816542265572 .. 187.5892191267302
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 186.52816542265572 .. 187.5892191267302
[INFO]    :: arms.py 280 ARMS() - Processing standard star
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1625+4405_KASTb_2018Aug16T061136.42.fits
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[INFO]    :: save.py 731 save_2d_images() - Wrote: Science/spec2d_J1625+4405_KASTb_2018Aug16T061136.42.fits
[INFO]    :: arms.py 102 ARMS() - Reducing file b132.fits, target J1625+4405
[INFO]    :: arms.py 114 ARMS() - Working on detector 1
[INFO]    :: calibrations.py 223 get_bias() - Reloading the bias from the internal dict
[INFO]    :: pixels.py 37 gen_pixloc() - Deriving physical pixel locations on the detector
[INFO]    :: pixels.py 40 gen_pixloc() - Pixel gap in the dispersion direction = 0.000
[INFO]    :: pixels.py 41 gen_pixloc() - Pixel size in the dispersion direction = 1.000
[INFO]    :: pixels.py 44 gen_pixloc() - Pixel gap in the spatial direction = 0.000
[INFO]    :: pixels.py 45 gen_pixloc() - Pixel size in the spatial direction = 1.000
[INFO]    :: pixels.py 50 gen_pixloc() - Saving pixel locations
[INFO]    :: arms.py 158 ARMS() - Working on the science frame
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[WARNING] :: procimg.py 456 gain_frame() - Should probably be measuring the gain across the amplifier boundary
[INFO]    :: processimages.py 509 build_rawvarframe() - Generate raw variance frame (from detected counts [flat fielded])
[INFO]    :: procimg.py 235 lacosmic() - Detecting cosmic rays with the L.A.Cosmic algorithm
[INFO]    :: procimg.py 259 lacosmic() - Convolving image with Laplacian kernel
[INFO]    :: procimg.py 267 lacosmic() - Creating noise model
[INFO]    :: procimg.py 274 lacosmic() - Calculating Laplacian signal to noise ratio
[INFO]    :: procimg.py 282 lacosmic() - Selecting candidate cosmic rays
[INFO]    :: procimg.py 287 lacosmic() -  6153 candidate pixels
[INFO]    :: procimg.py 297 lacosmic() - Building fine structure image
[INFO]    :: procimg.py 306 lacosmic() - Removing suspected compact bright objects
[INFO]    :: procimg.py 316 lacosmic() -  4776 remaining candidate pixels
[INFO]    :: procimg.py 320 lacosmic() - Finding neighboring pixels affected by cosmic rays
[INFO]    :: procimg.py 341 lacosmic() -  9852 pixels detected as cosmics
[INFO]    :: procimg.py 350 lacosmic() - Iteration 1 -- 9852 pixels identified as cosmic rays (9852 new)
[WORK IN ]::
[PROGRESS]:: procimg.py 353 lacosmic() - The following algorithm would be better on the rectified, tilts-corrected image
[INFO]    :: procimg.py 365 lacosmic() - Growing cosmic ray mask by 1 pixel
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=616803 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.004        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.004, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=618218 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.093     3488        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.030     3684        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.027     3736        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.026     3753        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   1.026     3760        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 6   1.026     3765        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 7   1.026     3765        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  7 iterations: reduced_chi =    1.026, rejected =    3765, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 400 trace_objects_in_slit() - Found 2 objects
[INFO]    :: artrace.py 401 trace_objects_in_slit() - Tracing 2 objects
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 448 trace_objects_in_slit() - Converting object traces to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 2 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=549426 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.004        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.004, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=550718 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.061     2489        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.011     2613        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.009     2657        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.008     2674        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   1.008     2687        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 6   1.007     2695        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 7   1.007     2700        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 8   1.007     2701        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 9   1.007     2702        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                10   1.007     2702        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after 10 iterations: reduced_chi =    1.007, rejected =    2702, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 400 trace_objects_in_slit() - Found 2 objects
[INFO]    :: artrace.py 401 trace_objects_in_slit() - Tracing 2 objects
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 448 trace_objects_in_slit() - Converting object traces to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 2 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 275 boxcar() - Performing boxcar extraction
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 1/2 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 2/2 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: scienceimage.py 358 extraction() - Update model variance image (and trace?) and repeat
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[WORK IN ]::
[PROGRESS]:: wave.py 275 flexure_obj() - Consider doing 2 passes in flexure as in LowRedux
[INFO]    :: wave.py 291 flexure_obj() - Working on flexure in slit (if an object was detected): 0
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=559.58
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of -0.466263 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 47.80495052574551 .. 47.918198625856405
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 47.80495052574551 .. 47.918198625856405
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=550.494
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of -0.465949 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]            
   int64                   float64                 ...                float64               
----------- -------------------------------------- ... -------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 185.209126303116 .. 186.9022316286785
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]            
   int64                   float64                 ...                float64               
----------- -------------------------------------- ... -------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 185.209126303116 .. 186.9022316286785
[INFO]    :: arms.py 241 ARMS() - Performing a heliocentric correction
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 47.80495052574551 .. 47.918198625856405
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 47.80495052574551 .. 47.918198625856405
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]            
   int64                   float64                 ...                float64               
----------- -------------------------------------- ... -------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 185.209126303116 .. 186.9022316286785
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]            
   int64                   float64                 ...                float64               
----------- -------------------------------------- ... -------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 185.209126303116 .. 186.9022316286785
[INFO]    :: arms.py 280 ARMS() - Processing standard star
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1625+4405_KASTb_2018Aug16T064256.99.fits
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[INFO]    :: save.py 731 save_2d_images() - Wrote: Science/spec2d_J1625+4405_KASTb_2018Aug16T064256.99.fits
[INFO]    :: arms.py 102 ARMS() - Reducing file b133.fits, target J1625+4405
[INFO]    :: arms.py 114 ARMS() - Working on detector 1
[INFO]    :: calibrations.py 223 get_bias() - Reloading the bias from the internal dict
[INFO]    :: pixels.py 37 gen_pixloc() - Deriving physical pixel locations on the detector
[INFO]    :: pixels.py 40 gen_pixloc() - Pixel gap in the dispersion direction = 0.000
[INFO]    :: pixels.py 41 gen_pixloc() - Pixel size in the dispersion direction = 1.000
[INFO]    :: pixels.py 44 gen_pixloc() - Pixel gap in the spatial direction = 0.000
[INFO]    :: pixels.py 45 gen_pixloc() - Pixel size in the spatial direction = 1.000
[INFO]    :: pixels.py 50 gen_pixloc() - Saving pixel locations
[INFO]    :: arms.py 158 ARMS() - Working on the science frame
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[WARNING] :: procimg.py 456 gain_frame() - Should probably be measuring the gain across the amplifier boundary
[INFO]    :: processimages.py 509 build_rawvarframe() - Generate raw variance frame (from detected counts [flat fielded])
[INFO]    :: procimg.py 235 lacosmic() - Detecting cosmic rays with the L.A.Cosmic algorithm
[INFO]    :: procimg.py 259 lacosmic() - Convolving image with Laplacian kernel
[INFO]    :: procimg.py 267 lacosmic() - Creating noise model
[INFO]    :: procimg.py 274 lacosmic() - Calculating Laplacian signal to noise ratio
[INFO]    :: procimg.py 282 lacosmic() - Selecting candidate cosmic rays
[INFO]    :: procimg.py 287 lacosmic() -  6215 candidate pixels
[INFO]    :: procimg.py 297 lacosmic() - Building fine structure image
[INFO]    :: procimg.py 306 lacosmic() - Removing suspected compact bright objects
[INFO]    :: procimg.py 316 lacosmic() -  4783 remaining candidate pixels
[INFO]    :: procimg.py 320 lacosmic() - Finding neighboring pixels affected by cosmic rays
[INFO]    :: procimg.py 341 lacosmic() -  9919 pixels detected as cosmics
[INFO]    :: procimg.py 350 lacosmic() - Iteration 1 -- 9919 pixels identified as cosmic rays (9919 new)
[WORK IN ]::
[PROGRESS]:: procimg.py 353 lacosmic() - The following algorithm would be better on the rectified, tilts-corrected image
[INFO]    :: procimg.py 365 lacosmic() - Growing cosmic ray mask by 1 pixel
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=617132 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.004        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.004, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=618355 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.080     3276        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.021     3474        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.017     3526        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.017     3543        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   1.016     3547        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 6   1.016     3552        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 7   1.016     3556        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 8   1.016     3557        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 9   1.016     3557        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  9 iterations: reduced_chi =    1.016, rejected =    3557, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 397 trace_objects_in_slit() - Found 1 object
[INFO]    :: artrace.py 398 trace_objects_in_slit() - Tracing 1 object
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 446 trace_objects_in_slit() - Converting object trace to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 1 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=578364 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.004        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.004, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=579521 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.066     2700        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.014     2839        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.012     2885        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.011     2906        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   1.011     2917        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 6   1.010     2923        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 7   1.010     2923        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  7 iterations: reduced_chi =    1.010, rejected =    2923, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 397 trace_objects_in_slit() - Found 1 object
[INFO]    :: artrace.py 398 trace_objects_in_slit() - Tracing 1 object
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 446 trace_objects_in_slit() - Converting object trace to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 1 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 275 boxcar() - Performing boxcar extraction
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 1/1 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: scienceimage.py 358 extraction() - Update model variance image (and trace?) and repeat
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[WORK IN ]::
[PROGRESS]:: wave.py 275 flexure_obj() - Consider doing 2 passes in flexure as in LowRedux
[INFO]    :: wave.py 291 flexure_obj() - Working on flexure in slit (if an object was detected): 0
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=540.78
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of -0.598024 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]             
   int64                   float64                 ...                float64                
----------- -------------------------------------- ... --------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 183.96525818409734 .. 184.030394288627
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]             
   int64                   float64                 ...                float64                
----------- -------------------------------------- ... --------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 183.96525818409734 .. 184.030394288627
[INFO]    :: arms.py 241 ARMS() - Performing a heliocentric correction
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]             
   int64                   float64                 ...                float64                
----------- -------------------------------------- ... --------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 183.96525818409734 .. 184.030394288627
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]             
   int64                   float64                 ...                float64                
----------- -------------------------------------- ... --------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 183.96525818409734 .. 184.030394288627
[INFO]    :: arms.py 280 ARMS() - Processing standard star
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[WARNING] :: procimg.py 456 gain_frame() - Should probably be measuring the gain across the amplifier boundary
[INFO]    :: processimages.py 509 build_rawvarframe() - Generate raw variance frame (from detected counts [flat fielded])
[INFO]    :: procimg.py 235 lacosmic() - Detecting cosmic rays with the L.A.Cosmic algorithm
[INFO]    :: procimg.py 259 lacosmic() - Convolving image with Laplacian kernel
[INFO]    :: procimg.py 267 lacosmic() - Creating noise model
[INFO]    :: procimg.py 274 lacosmic() - Calculating Laplacian signal to noise ratio
[INFO]    :: procimg.py 282 lacosmic() - Selecting candidate cosmic rays
[INFO]    :: procimg.py 287 lacosmic() - 31706 candidate pixels
[INFO]    :: procimg.py 297 lacosmic() - Building fine structure image
[INFO]    :: procimg.py 306 lacosmic() - Removing suspected compact bright objects
[INFO]    :: procimg.py 316 lacosmic() - 23049 remaining candidate pixels
[INFO]    :: procimg.py 320 lacosmic() - Finding neighboring pixels affected by cosmic rays
[INFO]    :: procimg.py 341 lacosmic() - 49899 pixels detected as cosmics
[INFO]    :: procimg.py 350 lacosmic() - Iteration 1 -- 49899 pixels identified as cosmic rays (49899 new)
[WORK IN ]::
[PROGRESS]:: procimg.py 353 lacosmic() - The following algorithm would be better on the rectified, tilts-corrected image
[INFO]    :: procimg.py 365 lacosmic() - Growing cosmic ray mask by 1 pixel
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=178981 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.378        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.378, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=491891 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   2.070    22927        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.039    25292        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   0.995    25560        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   0.990    25603        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   0.990    25610        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 6   0.990    25611        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 7   0.990    25611        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  7 iterations: reduced_chi =    0.990, rejected =   25611, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[INFO]    :: artrace.py 397 trace_objects_in_slit() - Found 1 object
[INFO]    :: artrace.py 398 trace_objects_in_slit() - Tracing 1 object
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 446 trace_objects_in_slit() - Converting object trace to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 1 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=59139 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.031        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.031, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=338209 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.708      274        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   0.699      280        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   0.699      280        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  3 iterations: reduced_chi =    0.699, rejected =     280, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 275 boxcar() - Performing boxcar extraction
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 1/1 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1625+4405_KASTb_2018Aug16T071853.78.fits
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[INFO]    :: save.py 731 save_2d_images() - Wrote: Science/spec2d_J1625+4405_KASTb_2018Aug16T071853.78.fits
[INFO]    :: arms.py 102 ARMS() - Reducing file b134.fits, target J1625+4405
[INFO]    :: arms.py 114 ARMS() - Working on detector 1
[INFO]    :: calibrations.py 223 get_bias() - Reloading the bias from the internal dict
[INFO]    :: pixels.py 37 gen_pixloc() - Deriving physical pixel locations on the detector
[INFO]    :: pixels.py 40 gen_pixloc() - Pixel gap in the dispersion direction = 0.000
[INFO]    :: pixels.py 41 gen_pixloc() - Pixel size in the dispersion direction = 1.000
[INFO]    :: pixels.py 44 gen_pixloc() - Pixel gap in the spatial direction = 0.000
[INFO]    :: pixels.py 45 gen_pixloc() - Pixel size in the spatial direction = 1.000
[INFO]    :: pixels.py 50 gen_pixloc() - Saving pixel locations
[INFO]    :: arms.py 158 ARMS() - Working on the science frame
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[WARNING] :: procimg.py 456 gain_frame() - Should probably be measuring the gain across the amplifier boundary
[INFO]    :: processimages.py 509 build_rawvarframe() - Generate raw variance frame (from detected counts [flat fielded])
[INFO]    :: procimg.py 235 lacosmic() - Detecting cosmic rays with the L.A.Cosmic algorithm
[INFO]    :: procimg.py 259 lacosmic() - Convolving image with Laplacian kernel
[INFO]    :: procimg.py 267 lacosmic() - Creating noise model
[INFO]    :: procimg.py 274 lacosmic() - Calculating Laplacian signal to noise ratio
[INFO]    :: procimg.py 282 lacosmic() - Selecting candidate cosmic rays
[INFO]    :: procimg.py 287 lacosmic() -  6414 candidate pixels
[INFO]    :: procimg.py 297 lacosmic() - Building fine structure image
[INFO]    :: procimg.py 306 lacosmic() - Removing suspected compact bright objects
[INFO]    :: procimg.py 316 lacosmic() -  4866 remaining candidate pixels
[INFO]    :: procimg.py 320 lacosmic() - Finding neighboring pixels affected by cosmic rays
[INFO]    :: procimg.py 341 lacosmic() - 10330 pixels detected as cosmics
[INFO]    :: procimg.py 350 lacosmic() - Iteration 1 -- 10330 pixels identified as cosmic rays (10330 new)
[WORK IN ]::
[PROGRESS]:: procimg.py 353 lacosmic() - The following algorithm would be better on the rectified, tilts-corrected image
[INFO]    :: procimg.py 365 lacosmic() - Growing cosmic ray mask by 1 pixel
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=617008 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.004        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.004, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=618361 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.090     3305        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.030     3510        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.027     3559        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.026     3577        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   1.026     3585        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 6   1.026     3587        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 7   1.026     3588        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 8   1.026     3588        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  8 iterations: reduced_chi =    1.026, rejected =    3588, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 397 trace_objects_in_slit() - Found 1 object
[INFO]    :: artrace.py 398 trace_objects_in_slit() - Tracing 1 object
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 446 trace_objects_in_slit() - Converting object trace to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 1 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=578196 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.004        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.004, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=579486 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.084     2983        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.027     3133        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.024     3183        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.023     3206        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   1.023     3216        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 6   1.023     3222        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 7   1.023     3225        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 8   1.023     3228        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 9   1.023     3228        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  9 iterations: reduced_chi =    1.023, rejected =    3228, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 397 trace_objects_in_slit() - Found 1 object
[INFO]    :: artrace.py 398 trace_objects_in_slit() - Tracing 1 object
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 446 trace_objects_in_slit() - Converting object trace to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 1 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 275 boxcar() - Performing boxcar extraction
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 1/1 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: scienceimage.py 358 extraction() - Update model variance image (and trace?) and repeat
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[WORK IN ]::
[PROGRESS]:: wave.py 275 flexure_obj() - Consider doing 2 passes in flexure as in LowRedux
[INFO]    :: wave.py 291 flexure_obj() - Working on flexure in slit (if an object was detected): 0
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=525.418
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of -0.712143 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 182.35610262917538 .. 183.07747429833816
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 182.35610262917538 .. 183.07747429833816
[INFO]    :: arms.py 241 ARMS() - Performing a heliocentric correction
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 182.35610262917538 .. 183.07747429833816
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 182.35610262917538 .. 183.07747429833816
[INFO]    :: arms.py 280 ARMS() - Processing standard star
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1625+4405_KASTb_2018Aug16T074937.92.fits
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[INFO]    :: save.py 731 save_2d_images() - Wrote: Science/spec2d_J1625+4405_KASTb_2018Aug16T074937.92.fits
[INFO]    :: arms.py 102 ARMS() - Reducing file b135.fits, target J2240+0132
[INFO]    :: arms.py 114 ARMS() - Working on detector 1
[INFO]    :: calibrations.py 223 get_bias() - Reloading the bias from the internal dict
[INFO]    :: pixels.py 37 gen_pixloc() - Deriving physical pixel locations on the detector
[INFO]    :: pixels.py 40 gen_pixloc() - Pixel gap in the dispersion direction = 0.000
[INFO]    :: pixels.py 41 gen_pixloc() - Pixel size in the dispersion direction = 1.000
[INFO]    :: pixels.py 44 gen_pixloc() - Pixel gap in the spatial direction = 0.000
[INFO]    :: pixels.py 45 gen_pixloc() - Pixel size in the spatial direction = 1.000
[INFO]    :: pixels.py 50 gen_pixloc() - Saving pixel locations
[INFO]    :: arms.py 158 ARMS() - Working on the science frame
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[WARNING] :: procimg.py 456 gain_frame() - Should probably be measuring the gain across the amplifier boundary
[INFO]    :: processimages.py 509 build_rawvarframe() - Generate raw variance frame (from detected counts [flat fielded])
[INFO]    :: procimg.py 235 lacosmic() - Detecting cosmic rays with the L.A.Cosmic algorithm
[INFO]    :: procimg.py 259 lacosmic() - Convolving image with Laplacian kernel
[INFO]    :: procimg.py 267 lacosmic() - Creating noise model
[INFO]    :: procimg.py 274 lacosmic() - Calculating Laplacian signal to noise ratio
[INFO]    :: procimg.py 282 lacosmic() - Selecting candidate cosmic rays
[INFO]    :: procimg.py 287 lacosmic() -  9617 candidate pixels
[INFO]    :: procimg.py 297 lacosmic() - Building fine structure image
[INFO]    :: procimg.py 306 lacosmic() - Removing suspected compact bright objects
[INFO]    :: procimg.py 316 lacosmic() -  7489 remaining candidate pixels
[INFO]    :: procimg.py 320 lacosmic() - Finding neighboring pixels affected by cosmic rays
[INFO]    :: procimg.py 341 lacosmic() - 15264 pixels detected as cosmics
[INFO]    :: procimg.py 350 lacosmic() - Iteration 1 -- 15264 pixels identified as cosmic rays (15264 new)
[WORK IN ]::
[PROGRESS]:: procimg.py 353 lacosmic() - The following algorithm would be better on the rectified, tilts-corrected image
[INFO]    :: procimg.py 365 lacosmic() - Growing cosmic ray mask by 1 pixel
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=610131 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.011        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.011, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=616766 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.290     4445        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.010     4715        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.006     4747        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.006     4758        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   1.006     4763        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 6   1.006     4767        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 7   1.005     4769        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 8   1.005     4771        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 9   1.005     4772        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                10   1.005     4773        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                11   1.005     4773        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after 11 iterations: reduced_chi =    1.005, rejected =    4773, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 400 trace_objects_in_slit() - Found 2 objects
[INFO]    :: artrace.py 401 trace_objects_in_slit() - Tracing 2 objects
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 448 trace_objects_in_slit() - Converting object traces to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 2 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=537087 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.011        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.011, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=543123 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.113     3422        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   0.988     3502        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   0.987     3512        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   0.987     3523        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   0.987     3532        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 6   0.987     3534        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 7   0.987     3535        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 8   0.987     3535        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  8 iterations: reduced_chi =    0.987, rejected =    3535, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 400 trace_objects_in_slit() - Found 2 objects
[INFO]    :: artrace.py 401 trace_objects_in_slit() - Tracing 2 objects
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 448 trace_objects_in_slit() - Converting object traces to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 2 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 275 boxcar() - Performing boxcar extraction
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 1/2 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 2/2 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: scienceimage.py 358 extraction() - Update model variance image (and trace?) and repeat
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[WORK IN ]::
[PROGRESS]:: wave.py 275 flexure_obj() - Consider doing 2 passes in flexure as in LowRedux
[INFO]    :: wave.py 291 flexure_obj() - Working on flexure in slit (if an object was detected): 0
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=616.582
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of 0.903791 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 184.18056515314086 .. 181.21153268689628
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 184.18056515314086 .. 181.21153268689628
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=597.754
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of 0.897777 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 290.2452922727032 .. 288.49577969773827
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 290.2452922727032 .. 288.49577969773827
[INFO]    :: arms.py 241 ARMS() - Performing a heliocentric correction
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 184.18056515314086 .. 181.21153268689628
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 184.18056515314086 .. 181.21153268689628
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 290.2452922727032 .. 288.49577969773827
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 290.2452922727032 .. 288.49577969773827
[INFO]    :: arms.py 280 ARMS() - Processing standard star
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J2240+0132_KASTb_2018Aug16T081722.21.fits
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[INFO]    :: save.py 731 save_2d_images() - Wrote: Science/spec2d_J2240+0132_KASTb_2018Aug16T081722.21.fits
[INFO]    :: arms.py 102 ARMS() - Reducing file b136.fits, target J2240+0132
[INFO]    :: arms.py 114 ARMS() - Working on detector 1
[INFO]    :: calibrations.py 223 get_bias() - Reloading the bias from the internal dict
[INFO]    :: pixels.py 37 gen_pixloc() - Deriving physical pixel locations on the detector
[INFO]    :: pixels.py 40 gen_pixloc() - Pixel gap in the dispersion direction = 0.000
[INFO]    :: pixels.py 41 gen_pixloc() - Pixel size in the dispersion direction = 1.000
[INFO]    :: pixels.py 44 gen_pixloc() - Pixel gap in the spatial direction = 0.000
[INFO]    :: pixels.py 45 gen_pixloc() - Pixel size in the spatial direction = 1.000
[INFO]    :: pixels.py 50 gen_pixloc() - Saving pixel locations
[INFO]    :: arms.py 158 ARMS() - Working on the science frame
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[WARNING] :: procimg.py 456 gain_frame() - Should probably be measuring the gain across the amplifier boundary
[INFO]    :: processimages.py 509 build_rawvarframe() - Generate raw variance frame (from detected counts [flat fielded])
[INFO]    :: procimg.py 235 lacosmic() - Detecting cosmic rays with the L.A.Cosmic algorithm
[INFO]    :: procimg.py 259 lacosmic() - Convolving image with Laplacian kernel
[INFO]    :: procimg.py 267 lacosmic() - Creating noise model
[INFO]    :: procimg.py 274 lacosmic() - Calculating Laplacian signal to noise ratio
[INFO]    :: procimg.py 282 lacosmic() - Selecting candidate cosmic rays
[INFO]    :: procimg.py 287 lacosmic() -  8625 candidate pixels
[INFO]    :: procimg.py 297 lacosmic() - Building fine structure image
[INFO]    :: procimg.py 306 lacosmic() - Removing suspected compact bright objects
[INFO]    :: procimg.py 316 lacosmic() -  6848 remaining candidate pixels
[INFO]    :: procimg.py 320 lacosmic() - Finding neighboring pixels affected by cosmic rays
[INFO]    :: procimg.py 341 lacosmic() - 14714 pixels detected as cosmics
[INFO]    :: procimg.py 350 lacosmic() - Iteration 1 -- 14714 pixels identified as cosmic rays (14714 new)
[WORK IN ]::
[PROGRESS]:: procimg.py 353 lacosmic() - The following algorithm would be better on the rectified, tilts-corrected image
[INFO]    :: procimg.py 365 lacosmic() - Growing cosmic ray mask by 1 pixel
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=590953 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.012        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.012, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=609696 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.172     3850        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   0.996     4057        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   0.993     4074        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   0.992     4077        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   0.992     4078        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 6   0.992     4078        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  6 iterations: reduced_chi =    0.992, rejected =    4078, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 400 trace_objects_in_slit() - Found 2 objects
[INFO]    :: artrace.py 401 trace_objects_in_slit() - Tracing 2 objects
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 448 trace_objects_in_slit() - Converting object traces to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 2 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=522017 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.012        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.012, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=538927 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.119     3513        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.009     3579        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.008     3585        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.008     3589        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   1.008     3594        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 6   1.008     3596        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 7   1.008     3596        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  7 iterations: reduced_chi =    1.008, rejected =    3596, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 400 trace_objects_in_slit() - Found 2 objects
[INFO]    :: artrace.py 401 trace_objects_in_slit() - Tracing 2 objects
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 448 trace_objects_in_slit() - Converting object traces to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 2 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 275 boxcar() - Performing boxcar extraction
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 1/2 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 2/2 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: scienceimage.py 358 extraction() - Update model variance image (and trace?) and repeat
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[WORK IN ]::
[PROGRESS]:: wave.py 275 flexure_obj() - Consider doing 2 passes in flexure as in LowRedux
[INFO]    :: wave.py 291 flexure_obj() - Working on flexure in slit (if an object was detected): 0
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=599.918
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of 0.881978 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 183.17619101762708 .. 181.03815446621144
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 183.17619101762708 .. 181.03815446621144
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=586.522
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of 0.878653 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]             
   int64                   float64                 ...                float64                
----------- -------------------------------------- ... --------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 289.2337741312134 .. 288.3151753301279
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]             
   int64                   float64                 ...                float64                
----------- -------------------------------------- ... --------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 289.2337741312134 .. 288.3151753301279
[INFO]    :: arms.py 241 ARMS() - Performing a heliocentric correction
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 183.17619101762708 .. 181.03815446621144
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 183.17619101762708 .. 181.03815446621144
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]             
   int64                   float64                 ...                float64                
----------- -------------------------------------- ... --------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 289.2337741312134 .. 288.3151753301279
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]             
   int64                   float64                 ...                float64                
----------- -------------------------------------- ... --------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 289.2337741312134 .. 288.3151753301279
[INFO]    :: arms.py 280 ARMS() - Processing standard star
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J2240+0132_KASTb_2018Aug16T083324.80.fits
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[INFO]    :: save.py 731 save_2d_images() - Wrote: Science/spec2d_J2240+0132_KASTb_2018Aug16T083324.80.fits
[INFO]    :: arms.py 102 ARMS() - Reducing file b137.fits, target J2240+0132
[INFO]    :: arms.py 114 ARMS() - Working on detector 1
[INFO]    :: calibrations.py 223 get_bias() - Reloading the bias from the internal dict
[INFO]    :: pixels.py 37 gen_pixloc() - Deriving physical pixel locations on the detector
[INFO]    :: pixels.py 40 gen_pixloc() - Pixel gap in the dispersion direction = 0.000
[INFO]    :: pixels.py 41 gen_pixloc() - Pixel size in the dispersion direction = 1.000
[INFO]    :: pixels.py 44 gen_pixloc() - Pixel gap in the spatial direction = 0.000
[INFO]    :: pixels.py 45 gen_pixloc() - Pixel size in the spatial direction = 1.000
[INFO]    :: pixels.py 50 gen_pixloc() - Saving pixel locations
[INFO]    :: arms.py 158 ARMS() - Working on the science frame
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[WARNING] :: procimg.py 456 gain_frame() - Should probably be measuring the gain across the amplifier boundary
[INFO]    :: processimages.py 509 build_rawvarframe() - Generate raw variance frame (from detected counts [flat fielded])
[INFO]    :: procimg.py 235 lacosmic() - Detecting cosmic rays with the L.A.Cosmic algorithm
[INFO]    :: procimg.py 259 lacosmic() - Convolving image with Laplacian kernel
[INFO]    :: procimg.py 267 lacosmic() - Creating noise model
[INFO]    :: procimg.py 274 lacosmic() - Calculating Laplacian signal to noise ratio
[INFO]    :: procimg.py 282 lacosmic() - Selecting candidate cosmic rays
[INFO]    :: procimg.py 287 lacosmic() -  5617 candidate pixels
[INFO]    :: procimg.py 297 lacosmic() - Building fine structure image
[INFO]    :: procimg.py 306 lacosmic() - Removing suspected compact bright objects
[INFO]    :: procimg.py 316 lacosmic() -  4688 remaining candidate pixels
[INFO]    :: procimg.py 320 lacosmic() - Finding neighboring pixels affected by cosmic rays
[INFO]    :: procimg.py 341 lacosmic() -  9964 pixels detected as cosmics
[INFO]    :: procimg.py 350 lacosmic() - Iteration 1 -- 9964 pixels identified as cosmic rays (9964 new)
[WORK IN ]::
[PROGRESS]:: procimg.py 353 lacosmic() - The following algorithm would be better on the rectified, tilts-corrected image
[INFO]    :: procimg.py 365 lacosmic() - Growing cosmic ray mask by 1 pixel
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=599803 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.010        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.010, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=611990 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.248     3199        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.020     3432        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.017     3454        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.017     3467        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   1.016     3477        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 6   1.016     3483        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 7   1.016     3489        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 8   1.016     3490        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 9   1.016     3492        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                10   1.016     3495        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                11   1.016     3498        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                12   1.016     3500        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                13   1.016     3500        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after 13 iterations: reduced_chi =    1.016, rejected =    3500, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 400 trace_objects_in_slit() - Found 2 objects
[INFO]    :: artrace.py 401 trace_objects_in_slit() - Tracing 2 objects
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 448 trace_objects_in_slit() - Converting object traces to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 2 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=523918 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.011        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.011, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=534781 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.163     3639        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.036     3747        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.034     3783        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.034     3804        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   1.033     3815        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 6   1.033     3817        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 7   1.033     3817        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  7 iterations: reduced_chi =    1.033, rejected =    3817, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 400 trace_objects_in_slit() - Found 2 objects
[INFO]    :: artrace.py 401 trace_objects_in_slit() - Tracing 2 objects
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 448 trace_objects_in_slit() - Converting object traces to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 2 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 275 boxcar() - Performing boxcar extraction
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 1/2 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 2/2 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: scienceimage.py 358 extraction() - Update model variance image (and trace?) and repeat
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[WORK IN ]::
[PROGRESS]:: wave.py 275 flexure_obj() - Consider doing 2 passes in flexure as in LowRedux
[INFO]    :: wave.py 291 flexure_obj() - Working on flexure in slit (if an object was detected): 0
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=598.957
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of 0.876805 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 181.67718235520925 .. 179.11321142978076
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 181.67718235520925 .. 179.11321142978076
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=594.621
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of 0.876393 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 239.9266290664653 .. 238.03240350171956
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 239.9266290664653 .. 238.03240350171956
[INFO]    :: arms.py 241 ARMS() - Performing a heliocentric correction
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 181.67718235520925 .. 179.11321142978076
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 181.67718235520925 .. 179.11321142978076
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 239.9266290664653 .. 238.03240350171956
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 239.9266290664653 .. 238.03240350171956
[INFO]    :: arms.py 280 ARMS() - Processing standard star
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J2240+0132_KASTb_2018Aug16T094947.14.fits
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[INFO]    :: save.py 731 save_2d_images() - Wrote: Science/spec2d_J2240+0132_KASTb_2018Aug16T094947.14.fits
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_P330E_KASTb_2018Aug16T034442.68.fits
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_BD+174708_KASTb_2018Aug16T095501.05.fits
[INFO]    :: arms.py 392 ARMS() - Taking one star per detector mosaic
[INFO]    :: arms.py 393 ARMS() - Waited until very end to work on it
[WARNING] :: arms.py 394 ARMS() - You should probably consider using the pypeit_flux_spec script anyhow...
[INFO]    :: fluxspec.py 130 __init__() - Spectrograph set to <ShaneKastBlueSpectrograph:  spectrograph=shane_kast_blue, camera=KASTb>, from argument object
[INFO]    :: flux.py 367 load_extinction_data() - Using mthamextinct.dat for extinction corrections.
[INFO]    :: flux.py 443 find_standard() - Putative standard star <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 345 32.26873525639112 .. 340.4999999999986 ... 184.61765892301676 .. 183.47391253873715 has a median boxcar count of 986.6386437630417
[INFO]    :: flux.py 300 find_standard_file() - Using standard star P330E
[INFO]    :: flux.py 404 load_standard_file() - Loading standard star file: /Users/astro/anaconda3/pkgs/PypeIt/pypeit/data/standards/calspec/p330e_stisnic_002.fits.gz
[INFO]    :: flux.py 405 load_standard_file() - Fluxes are flambda, normalized to 1e-17
[INFO]    :: flux.py 507 generate_sensfunc() - Masking edges
[WARNING] :: flux.py 513 generate_sensfunc() - Should pull resolution from arc line analysis
[INFO]    :: flux.py 517 generate_sensfunc() - Masking Balmer
[INFO]    :: flux.py 525 generate_sensfunc() - Masking Telluric
[INFO]    :: flux.py 532 generate_sensfunc() - Masking Below the atmospheric cutoff
[INFO]    :: flux.py 203 bspline_magfit() - Difference between fits is 0.00564012
[WORK IN ]::
[PROGRESS]:: flux.py 206 bspline_magfit() - Add QA for sensitivity function
[INFO]    :: fluxspec.py 391 save_master() - Wrote sensfunc to MasterFrame: /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug15/MF_shane_kast_blue/MasterSensFunc_A_aa.yaml
[INFO]    :: arms.py 416 ARMS() - Fluxing with P330E
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 189.09373961008302 .. 187.39936044743004
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 189.09373961008302 .. 187.39936044743004
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 109.06607702582221 .. 106.45154911037878
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 109.06607702582221 .. 106.45154911037878
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1616+4410_KASTb_2018Aug16T042643.07.fits
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...              trace [2048]             
   int64          float64      ...                float64                
------------ ----------------- ... --------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 188.7374769464114 .. 187.0818846789508
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...              trace [2048]             
   int64          float64      ...                float64                
------------ ----------------- ... --------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 188.7374769464114 .. 187.0818846789508
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 109.25712281357124 .. 106.68767468221269
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 109.25712281357124 .. 106.68767468221269
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1616+4410_KASTb_2018Aug16T045806.41.fits
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 188.73075579060213 .. 187.33760356544516
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 188.73075579060213 .. 187.33760356544516
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...              trace [2048]             
   int64          float64      ...                float64                
------------ ----------------- ... --------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 268.5269362375276 .. 268.0512712104801
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...              trace [2048]             
   int64          float64      ...                float64                
------------ ----------------- ... --------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 268.5269362375276 .. 268.0512712104801
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1616+4410_KASTb_2018Aug16T053436.04.fits
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...              trace [2048]            
   int64          float64      ...                float64               
------------ ----------------- ... -------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 49.46473866089116 .. 48.9498530320477
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...              trace [2048]            
   int64          float64      ...                float64               
------------ ----------------- ... -------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 49.46473866089116 .. 48.9498530320477
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]             
   int64          float64      ...                 float64                
------------ ----------------- ... ---------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 186.52816542265572 .. 187.5892191267302
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]             
   int64          float64      ...                 float64                
------------ ----------------- ... ---------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 186.52816542265572 .. 187.5892191267302
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1625+4405_KASTb_2018Aug16T061136.42.fits
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]             
   int64          float64      ...                 float64                
------------ ----------------- ... ---------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 47.80495052574551 .. 47.918198625856405
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]             
   int64          float64      ...                 float64                
------------ ----------------- ... ---------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 47.80495052574551 .. 47.918198625856405
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...              trace [2048]            
   int64          float64      ...                float64               
------------ ----------------- ... -------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 185.209126303116 .. 186.9022316286785
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...              trace [2048]            
   int64          float64      ...                float64               
------------ ----------------- ... -------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 185.209126303116 .. 186.9022316286785
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1625+4405_KASTb_2018Aug16T064256.99.fits
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...              trace [2048]             
   int64          float64      ...                float64                
------------ ----------------- ... --------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 183.96525818409734 .. 184.030394288627
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...              trace [2048]             
   int64          float64      ...                float64                
------------ ----------------- ... --------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 183.96525818409734 .. 184.030394288627
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1625+4405_KASTb_2018Aug16T071853.78.fits
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 182.35610262917538 .. 183.07747429833816
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 182.35610262917538 .. 183.07747429833816
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1625+4405_KASTb_2018Aug16T074937.92.fits
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 184.18056515314086 .. 181.21153268689628
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 184.18056515314086 .. 181.21153268689628
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]             
   int64          float64      ...                 float64                
------------ ----------------- ... ---------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 290.2452922727032 .. 288.49577969773827
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]             
   int64          float64      ...                 float64                
------------ ----------------- ... ---------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 290.2452922727032 .. 288.49577969773827
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J2240+0132_KASTb_2018Aug16T081722.21.fits
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 183.17619101762708 .. 181.03815446621144
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 183.17619101762708 .. 181.03815446621144
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...              trace [2048]             
   int64          float64      ...                float64                
------------ ----------------- ... --------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 289.2337741312134 .. 288.3151753301279
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...              trace [2048]             
   int64          float64      ...                float64                
------------ ----------------- ... --------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 289.2337741312134 .. 288.3151753301279
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J2240+0132_KASTb_2018Aug16T083324.80.fits
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 181.67718235520925 .. 179.11321142978076
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 181.67718235520925 .. 179.11321142978076
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]             
   int64          float64      ...                 float64                
------------ ----------------- ... ---------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 239.9266290664653 .. 238.03240350171956
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]             
   int64          float64      ...                 float64                
------------ ----------------- ... ---------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 239.9266290664653 .. 238.03240350171956
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J2240+0132_KASTb_2018Aug16T094947.14.fits
[INFO]    :: pypeit.py 126 PypeIt() - Data reduction complete
[INFO]    :: pypeit.py 128 PypeIt() - Generating QA HTML
[INFO]    :: pypeit.py 142 PypeIt() - Data reduction execution time: 5m 23.46s
