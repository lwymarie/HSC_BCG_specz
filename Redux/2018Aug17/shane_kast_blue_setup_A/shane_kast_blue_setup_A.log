------------------------------------------------------

This log was generated with version 0.8.2dev of PYPIT

You are using scipy version=1.0.0
You are using numpy version=1.14.0
You are using astropy version=3.0.4

------------------------------------------------------

[INFO]    :: util.py 431 parse_pypeit_file() - Loading the reduction file
[INFO]    :: util.py 456 parse_pypeit_file() - Found 29 raw data frames
[INFO]    :: util.py 468 parse_pypeit_file() - Input file loaded successfully
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b101.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b101.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b102.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b102.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b103.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b103.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b104.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b104.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b105.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b105.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b106.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b106.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b107.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b107.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b108.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b108.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b109.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b109.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b110.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b110.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b111.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b111.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b112.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b112.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b113.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b113.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b114.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b114.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b115.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b115.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b116.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b116.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b117.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b117.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b118.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b118.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b119.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b119.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b120.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b120.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b122.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b122.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b123.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b123.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b124.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b124.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b125.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b125.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b126.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b126.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b127.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b127.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b128.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b128.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b129.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b129.fits
[WARNING] :: load.py 93 load_headers() - UTC is not listed as a header keyword in file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b121.fits
[WARNING] :: load.py 102 load_headers() - BINNING keyword not in header. Setting to None
[INFO]    :: load.py 139 load_headers() - Successfully loaded headers for file:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/RawData/2018Aug17/b121.fits
[INFO]    :: load.py 142 load_headers() - Checking spectrograph settings for required header information
[INFO]    :: load.py 153 load_headers() - Headers loaded for 29 files successfully
[INFO]    :: fsort.py 103 type_data() - Typing files
[INFO]    :: pypeitsetup.py 326 type_data() - Adding file type information to the fitstbl
[INFO]    :: fsort.py 856 match_to_science() - Matching calibrations to Science frames
[INFO]    :: fsort.py 864 match_to_science() - =================================================
[INFO]    :: fsort.py 866 match_to_science() - Matching calibrations to J1620+4333: b122.fits
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 arc frame for J1620+4333 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 12 bias frame for J1620+4333 (5 required)
[INFO]    :: fsort.py 879 match_to_science() -   Dark frames not required.  Not matching..
[INFO]    :: fsort.py 897 match_to_science() -    No pinhole frames are required.  Not matching..
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 pixelflat frame for J1620+4333 (3 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 1 standard frame for J1620+4333 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 trace frame for J1620+4333 (3 required)
[INFO]    :: fsort.py 864 match_to_science() - =================================================
[INFO]    :: fsort.py 866 match_to_science() - Matching calibrations to J1624+4249: b123.fits
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 arc frame for J1624+4249 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 12 bias frame for J1624+4249 (5 required)
[INFO]    :: fsort.py 879 match_to_science() -   Dark frames not required.  Not matching..
[INFO]    :: fsort.py 897 match_to_science() -    No pinhole frames are required.  Not matching..
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 pixelflat frame for J1624+4249 (3 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 1 standard frame for J1624+4249 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 trace frame for J1624+4249 (3 required)
[INFO]    :: fsort.py 864 match_to_science() - =================================================
[INFO]    :: fsort.py 866 match_to_science() - Matching calibrations to J1624+4249: b124.fits
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 arc frame for J1624+4249 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 12 bias frame for J1624+4249 (5 required)
[INFO]    :: fsort.py 879 match_to_science() -   Dark frames not required.  Not matching..
[INFO]    :: fsort.py 897 match_to_science() -    No pinhole frames are required.  Not matching..
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 pixelflat frame for J1624+4249 (3 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 1 standard frame for J1624+4249 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 trace frame for J1624+4249 (3 required)
[INFO]    :: fsort.py 864 match_to_science() - =================================================
[INFO]    :: fsort.py 866 match_to_science() - Matching calibrations to J1622+4229: b125.fits
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 arc frame for J1622+4229 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 12 bias frame for J1622+4229 (5 required)
[INFO]    :: fsort.py 879 match_to_science() -   Dark frames not required.  Not matching..
[INFO]    :: fsort.py 897 match_to_science() -    No pinhole frames are required.  Not matching..
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 pixelflat frame for J1622+4229 (3 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 1 standard frame for J1622+4229 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 trace frame for J1622+4229 (3 required)
[INFO]    :: fsort.py 864 match_to_science() - =================================================
[INFO]    :: fsort.py 866 match_to_science() - Matching calibrations to J1622+4229: b126.fits
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 arc frame for J1622+4229 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 12 bias frame for J1622+4229 (5 required)
[INFO]    :: fsort.py 879 match_to_science() -   Dark frames not required.  Not matching..
[INFO]    :: fsort.py 897 match_to_science() -    No pinhole frames are required.  Not matching..
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 pixelflat frame for J1622+4229 (3 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 1 standard frame for J1622+4229 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 trace frame for J1622+4229 (3 required)
[INFO]    :: fsort.py 864 match_to_science() - =================================================
[INFO]    :: fsort.py 866 match_to_science() - Matching calibrations to J1622+4229: b127.fits
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 arc frame for J1622+4229 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 12 bias frame for J1622+4229 (5 required)
[INFO]    :: fsort.py 879 match_to_science() -   Dark frames not required.  Not matching..
[INFO]    :: fsort.py 897 match_to_science() -    No pinhole frames are required.  Not matching..
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 pixelflat frame for J1622+4229 (3 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 1 standard frame for J1622+4229 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 trace frame for J1622+4229 (3 required)
[INFO]    :: fsort.py 864 match_to_science() - =================================================
[INFO]    :: fsort.py 866 match_to_science() - Matching calibrations to J2244+0147: b128.fits
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 arc frame for J2244+0147 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 12 bias frame for J2244+0147 (5 required)
[INFO]    :: fsort.py 879 match_to_science() -   Dark frames not required.  Not matching..
[INFO]    :: fsort.py 897 match_to_science() -    No pinhole frames are required.  Not matching..
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 pixelflat frame for J2244+0147 (3 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 1 standard frame for J2244+0147 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 trace frame for J2244+0147 (3 required)
[INFO]    :: fsort.py 864 match_to_science() - =================================================
[INFO]    :: fsort.py 866 match_to_science() - Matching calibrations to J2244+0147: b129.fits
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 arc frame for J2244+0147 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 12 bias frame for J2244+0147 (5 required)
[INFO]    :: fsort.py 879 match_to_science() -   Dark frames not required.  Not matching..
[INFO]    :: fsort.py 897 match_to_science() -    No pinhole frames are required.  Not matching..
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 pixelflat frame for J2244+0147 (3 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 1 standard frame for J2244+0147 (1 required)
[INFO]    :: fsort.py 920 match_to_science() -   Found 4 trace frame for J2244+0147 (3 required)
[INFO]    :: fsort.py 941 match_to_science() - Science frames successfully matched to calibration frames
[INFO]    :: fsort.py 1116 make_dirs() - Creating Science directory
[INFO]    :: fsort.py 1139 make_dirs() - Creating Object directories
[INFO]    :: fsort.py 1177 make_dirs() - Creating Master Calibrations directory
[INFO]    :: fsort.py 1199 make_dirs() - Creating QA directory
[INFO]    :: pypeit.py 113 PypeIt() - Data reduction will be performed using PYPIT-ARMS
[INFO]    :: arms.py 102 ARMS() - Reducing file b122.fits, target J1620+4333
[INFO]    :: arms.py 114 ARMS() - Working on detector 1
[WARNING] :: processimages.py 441 process() - Your images have not been bias subtracted!
[INFO]    :: combine.py 62 comb_frames() - Combining 5 bias frames
[WORK IN ]::
[PROGRESS]:: combine.py 66 comb_frames() - lscomb feature has not been included here yet...
[INFO]    :: combine.py 95 comb_frames() - Finding saturated and non-linear pixels
[INFO]    :: combine.py 119 comb_frames() - Rejecting cosmic rays
[INFO]    :: combine.py 163 comb_frames() - Not rejecting any low/high pixels
[INFO]    :: combine.py 171 comb_frames() - Rejecting deviant pixels
[INFO]    :: combine.py 188 comb_frames() - Combining frames with a weightmean operation
[INFO]    :: combine.py 201 comb_frames() - Replacing completely masked pixels with the maxnonsat value of the input frames
[INFO]    :: combine.py 215 comb_frames() - 5 bias frames combined successfully!
[INFO]    :: masters.py 314 save_master() - Saving master bias frame as:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug17/MF_shane_kast_blue/MasterBias_A_01_aa.fits
[INFO]    :: masters.py 332 save_master() - Writing header information
[INFO]    :: masters.py 347 save_master() - Master bias frame saved successfully:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug17/MF_shane_kast_blue/MasterBias_A_01_aa.fits
[INFO]    :: calibrations.py 195 get_arc() - Preparing a master arc frame
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[INFO]    :: masters.py 314 save_master() - Saving master arc frame as:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug17/MF_shane_kast_blue/MasterArc_A_01_aa.fits
[INFO]    :: masters.py 332 save_master() - Writing header information
[INFO]    :: masters.py 347 save_master() - Master arc frame saved successfully:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug17/MF_shane_kast_blue/MasterArc_A_01_aa.fits
[INFO]    :: pixels.py 37 gen_pixloc() - Deriving physical pixel locations on the detector
[INFO]    :: pixels.py 40 gen_pixloc() - Pixel gap in the dispersion direction = 0.000
[INFO]    :: pixels.py 41 gen_pixloc() - Pixel size in the dispersion direction = 1.000
[INFO]    :: pixels.py 44 gen_pixloc() - Pixel gap in the spatial direction = 0.000
[INFO]    :: pixels.py 45 gen_pixloc() - Pixel size in the spatial direction = 1.000
[INFO]    :: pixels.py 50 gen_pixloc() - Saving pixel locations
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[INFO]    :: combine.py 62 comb_frames() - Combining 3 trace_image frames
[WORK IN ]::
[PROGRESS]:: combine.py 66 comb_frames() - lscomb feature has not been included here yet...
[INFO]    :: combine.py 95 comb_frames() - Finding saturated and non-linear pixels
[INFO]    :: combine.py 119 comb_frames() - Rejecting cosmic rays
[INFO]    :: combine.py 163 comb_frames() - Not rejecting any low/high pixels
[INFO]    :: combine.py 171 comb_frames() - Rejecting deviant pixels
[INFO]    :: combine.py 188 comb_frames() - Combining frames with a weightmean operation
[INFO]    :: combine.py 201 comb_frames() - Replacing completely masked pixels with the maxnonsat value of the input frames
[INFO]    :: combine.py 215 comb_frames() - 3 trace_image frames combined successfully!
[WARNING] :: procimg.py 456 gain_frame() - Should probably be measuring the gain across the amplifier boundary
[INFO]    :: trace_slits.py 813 edgearr_from_binarr() - Detecting slit edges in the mstrace image
[INFO]    :: trace_slits.py 874 edgearr_from_binarr() - Applying bad pixel mask
[INFO]    :: trace_slits.py 933 edgearr_add_left_right() - 1 left edge and 1 right edge were found in the trace
[INFO]    :: trace_slits.py 960 edgearr_add_left_right() - Assigning slit edge traces
[INFO]    :: traceslits.py 371 _assign_edges() - Assigning left slit edges
[INFO]    :: traceslits.py 379 _assign_edges() - Assigning right slit edges
[INFO]    :: trace_slits.py 1157 edgearr_final_left_right() - 1 left edge and 1 right edge were found in the trace
[INFO]    :: trace_slits.py 560 edgearr_tcrude() - Crude tracing the edges
[INFO]    :: trace_slits.py 1309 fit_edges() - Fitting left slit traces
[INFO]    :: trace_slits.py 1311 fit_edges() - Fitting right slit traces
[INFO]    :: traceslits.py 404 _chk_for_longslit() - Only one slit was identified. Should be a longslit.
[INFO]    :: traceslits.py 531 _make_pixel_arrays() - Converting physical trace locations to nearest pixel
[INFO]    :: traceslits.py 538 _make_pixel_arrays() - Identifying the pixels belonging to each slit
[INFO]    :: traceslits.py 921 save_master() - Wrote TraceSlit arrays to /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug17/MF_shane_kast_blue/MasterTrace_A_01_aa.fits
[INFO]    :: traceslits.py 923 save_master() - gzip compressing /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug17/MF_shane_kast_blue/MasterTrace_A_01_aa.fits
[INFO]    :: traceslits.py 937 save_master() - Writing TraceSlit dict to /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug17/MF_shane_kast_blue/MasterTrace_A_01_aa.json
[INFO]    :: arc.py 114 get_censpec() - Extracting an approximate arc spectrum at the centre of each slit
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[INFO]    :: arc.py 69 setup_param() - Loading line list using CdI,HgI,HeI lamps
[INFO]    :: ararclines.py 67 load_arcline_list() - Rejecting select CdI lines
[WARNING] :: ararclines.py 99 reject_lines() - Am not sure this method does anything for real -- JXP 03-Jul-2018
[INFO]    :: ararclines.py 67 load_arcline_list() - Rejecting select HgI lines
[WARNING] :: ararclines.py 99 reject_lines() - Am not sure this method does anything for real -- JXP 03-Jul-2018
[INFO]    :: ararclines.py 75 load_arcline_list() - Cutting down line list by wvmnx: 2900,6000
[INFO]    :: masters.py 314 save_master() - Saving master wv_calib frame as:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug17/MF_shane_kast_blue/MasterWaveCalib_A_01_aa.json
[INFO]    :: masters.py 347 save_master() - Master wv_calib frame saved successfully:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug17/MF_shane_kast_blue/MasterWaveCalib_A_01_aa.json
[INFO]    :: arc.py 114 get_censpec() - Extracting an approximate arc spectrum at the centre of each slit
[WORK IN ]::
[PROGRESS]:: tracewave.py 200 trace_tilt() - Detecting lines for slit 1
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: tracewave.py 264 trace_tilt() - Modelling arc line tilts with 11 arc lines
[WORK IN ]::
[PROGRESS]:: tracewave.py 270 trace_tilt() - This next step could be multiprocessed to speed up the reduction
[INFO]    :: tracewave.py 444 trace_tilt() - Completed spectral tilt tracing
[INFO]    :: tracewave.py 780 fit_tilts() - Fitting tilts with a low order, 2D legendre
[WORK IN ]::
[PROGRESS]:: utils.py 747 polyfit2d_general() - Generalize to different polynomial types
[INFO]    :: tracewave.py 797 fit_tilts() - RMS (pixels): 0.01243215621299119
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[INFO]    :: combine.py 62 comb_frames() - Combining 3 pixelflat frames
[WORK IN ]::
[PROGRESS]:: combine.py 66 comb_frames() - lscomb feature has not been included here yet...
[INFO]    :: combine.py 95 comb_frames() - Finding saturated and non-linear pixels
[INFO]    :: combine.py 119 comb_frames() - Rejecting cosmic rays
[INFO]    :: combine.py 163 comb_frames() - Not rejecting any low/high pixels
[INFO]    :: combine.py 171 comb_frames() - Rejecting deviant pixels
[INFO]    :: combine.py 188 comb_frames() - Combining frames with a weightmean operation
[INFO]    :: combine.py 201 comb_frames() - Replacing completely masked pixels with the maxnonsat value of the input frames
[INFO]    :: combine.py 215 comb_frames() - 3 pixelflat frames combined successfully!
[WARNING] :: procimg.py 456 gain_frame() - Should probably be measuring the gain across the amplifier boundary
[INFO]    :: flatfield.py 285 run() - Setting pixels outside of slits to 1. in the flat.
[INFO]    :: masters.py 314 save_master() - Saving master pixelflat frame as:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug17/MF_shane_kast_blue/MasterFlatField_A_01_aa.fits
[INFO]    :: masters.py 332 save_master() - Writing header information
[INFO]    :: masters.py 347 save_master() - Master pixelflat frame saved successfully:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug17/MF_shane_kast_blue/MasterFlatField_A_01_aa.fits
[INFO]    :: masters.py 314 save_master() - Saving master pixelflat frame as:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug17/MF_shane_kast_blue/MasterSlitProfile_A_01_aa.fits
[INFO]    :: masters.py 332 save_master() - Writing header information
[INFO]    :: masters.py 347 save_master() - Master pixelflat frame saved successfully:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug17/MF_shane_kast_blue/MasterSlitProfile_A_01_aa.fits
[INFO]    :: masters.py 314 save_master() - Saving master wave frame as:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug17/MF_shane_kast_blue/MasterWave_A_01_aa.fits
[INFO]    :: masters.py 332 save_master() - Writing header information
[INFO]    :: masters.py 347 save_master() - Master wave frame saved successfully:
             /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug17/MF_shane_kast_blue/MasterWave_A_01_aa.fits
[INFO]    :: arms.py 158 ARMS() - Working on the science frame
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[WARNING] :: procimg.py 456 gain_frame() - Should probably be measuring the gain across the amplifier boundary
[INFO]    :: processimages.py 509 build_rawvarframe() - Generate raw variance frame (from detected counts [flat fielded])
[INFO]    :: procimg.py 235 lacosmic() - Detecting cosmic rays with the L.A.Cosmic algorithm
[INFO]    :: procimg.py 259 lacosmic() - Convolving image with Laplacian kernel
[INFO]    :: procimg.py 267 lacosmic() - Creating noise model
[INFO]    :: procimg.py 274 lacosmic() - Calculating Laplacian signal to noise ratio
[INFO]    :: procimg.py 282 lacosmic() - Selecting candidate cosmic rays
[INFO]    :: procimg.py 287 lacosmic() -   887 candidate pixels
[INFO]    :: procimg.py 297 lacosmic() - Building fine structure image
[INFO]    :: procimg.py 306 lacosmic() - Removing suspected compact bright objects
[INFO]    :: procimg.py 316 lacosmic() -   858 remaining candidate pixels
[INFO]    :: procimg.py 320 lacosmic() - Finding neighboring pixels affected by cosmic rays
[INFO]    :: procimg.py 341 lacosmic() -  1611 pixels detected as cosmics
[INFO]    :: procimg.py 350 lacosmic() - Iteration 1 -- 1611 pixels identified as cosmic rays (1611 new)
[WORK IN ]::
[PROGRESS]:: procimg.py 353 lacosmic() - The following algorithm would be better on the rectified, tilts-corrected image
[INFO]    :: procimg.py 365 lacosmic() - Growing cosmic ray mask by 1 pixel
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=618812 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.000        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.000, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=618812 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.355     5966        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.256     6331        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.251     6417        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.250     6444        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   1.250     6455        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 6   1.250     6456        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 7   1.250     6456        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  7 iterations: reduced_chi =    1.250, rejected =    6456, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 397 trace_objects_in_slit() - Found 1 object
[INFO]    :: artrace.py 398 trace_objects_in_slit() - Tracing 1 object
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 446 trace_objects_in_slit() - Converting object trace to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 1 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=588123 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.000        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.000, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=588123 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.353     5364        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.261     5631        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.257     5673        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.256     5679        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   1.256     5679        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  5 iterations: reduced_chi =    1.256, rejected =    5679, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 397 trace_objects_in_slit() - Found 1 object
[INFO]    :: artrace.py 398 trace_objects_in_slit() - Tracing 1 object
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 446 trace_objects_in_slit() - Converting object trace to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 1 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 275 boxcar() - Performing boxcar extraction
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 1/1 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: scienceimage.py 358 extraction() - Update model variance image (and trace?) and repeat
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[WORK IN ]::
[PROGRESS]:: wave.py 275 flexure_obj() - Consider doing 2 passes in flexure as in LowRedux
[INFO]    :: wave.py 291 flexure_obj() - Working on flexure in slit (if an object was detected): 0
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=555.79
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of -0.153604 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 196.51733067745897 .. 194.98836840743505
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 196.51733067745897 .. 194.98836840743505
[INFO]    :: arms.py 241 ARMS() - Performing a heliocentric correction
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 196.51733067745897 .. 194.98836840743505
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 196.51733067745897 .. 194.98836840743505
[INFO]    :: arms.py 280 ARMS() - Processing standard star
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[WARNING] :: procimg.py 456 gain_frame() - Should probably be measuring the gain across the amplifier boundary
[INFO]    :: processimages.py 509 build_rawvarframe() - Generate raw variance frame (from detected counts [flat fielded])
[INFO]    :: procimg.py 235 lacosmic() - Detecting cosmic rays with the L.A.Cosmic algorithm
[INFO]    :: procimg.py 259 lacosmic() - Convolving image with Laplacian kernel
[INFO]    :: procimg.py 267 lacosmic() - Creating noise model
[INFO]    :: procimg.py 274 lacosmic() - Calculating Laplacian signal to noise ratio
[INFO]    :: procimg.py 282 lacosmic() - Selecting candidate cosmic rays
[INFO]    :: procimg.py 287 lacosmic() - 14993 candidate pixels
[INFO]    :: procimg.py 297 lacosmic() - Building fine structure image
[INFO]    :: procimg.py 306 lacosmic() - Removing suspected compact bright objects
[INFO]    :: procimg.py 316 lacosmic() - 11114 remaining candidate pixels
[INFO]    :: procimg.py 320 lacosmic() - Finding neighboring pixels affected by cosmic rays
[INFO]    :: procimg.py 341 lacosmic() - 23694 pixels detected as cosmics
[INFO]    :: procimg.py 350 lacosmic() - Iteration 1 -- 23694 pixels identified as cosmic rays (23694 new)
[WORK IN ]::
[PROGRESS]:: procimg.py 353 lacosmic() - The following algorithm would be better on the rectified, tilts-corrected image
[INFO]    :: procimg.py 365 lacosmic() - Growing cosmic ray mask by 1 pixel
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=619088 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.003        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.003, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=619088 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.097     4229        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   0.991     4284        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   0.990     4286        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   0.990     4286        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  4 iterations: reduced_chi =    0.990, rejected =    4286, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 397 trace_objects_in_slit() - Found 1 object
[INFO]    :: artrace.py 398 trace_objects_in_slit() - Tracing 1 object
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 446 trace_objects_in_slit() - Converting object trace to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 1 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=567888 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.001        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.001, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=567888 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.019     1552        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   0.991     1586        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   0.991     1586        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  3 iterations: reduced_chi =    0.991, rejected =    1586, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 275 boxcar() - Performing boxcar extraction
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 1/1 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1620+4333_KASTb_2018Aug18T041551.92.fits
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[INFO]    :: save.py 731 save_2d_images() - Wrote: Science/spec2d_J1620+4333_KASTb_2018Aug18T041551.92.fits
[INFO]    :: arms.py 102 ARMS() - Reducing file b123.fits, target J1624+4249
[INFO]    :: arms.py 114 ARMS() - Working on detector 1
[INFO]    :: calibrations.py 223 get_bias() - Reloading the bias from the internal dict
[INFO]    :: pixels.py 37 gen_pixloc() - Deriving physical pixel locations on the detector
[INFO]    :: pixels.py 40 gen_pixloc() - Pixel gap in the dispersion direction = 0.000
[INFO]    :: pixels.py 41 gen_pixloc() - Pixel size in the dispersion direction = 1.000
[INFO]    :: pixels.py 44 gen_pixloc() - Pixel gap in the spatial direction = 0.000
[INFO]    :: pixels.py 45 gen_pixloc() - Pixel size in the spatial direction = 1.000
[INFO]    :: pixels.py 50 gen_pixloc() - Saving pixel locations
[INFO]    :: arms.py 158 ARMS() - Working on the science frame
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[WARNING] :: procimg.py 456 gain_frame() - Should probably be measuring the gain across the amplifier boundary
[INFO]    :: processimages.py 509 build_rawvarframe() - Generate raw variance frame (from detected counts [flat fielded])
[INFO]    :: procimg.py 235 lacosmic() - Detecting cosmic rays with the L.A.Cosmic algorithm
[INFO]    :: procimg.py 259 lacosmic() - Convolving image with Laplacian kernel
[INFO]    :: procimg.py 267 lacosmic() - Creating noise model
[INFO]    :: procimg.py 274 lacosmic() - Calculating Laplacian signal to noise ratio
[INFO]    :: procimg.py 282 lacosmic() - Selecting candidate cosmic rays
[INFO]    :: procimg.py 287 lacosmic() -  4646 candidate pixels
[INFO]    :: procimg.py 297 lacosmic() - Building fine structure image
[INFO]    :: procimg.py 306 lacosmic() - Removing suspected compact bright objects
[INFO]    :: procimg.py 316 lacosmic() -  3873 remaining candidate pixels
[INFO]    :: procimg.py 320 lacosmic() - Finding neighboring pixels affected by cosmic rays
[INFO]    :: procimg.py 341 lacosmic() -  8198 pixels detected as cosmics
[INFO]    :: procimg.py 350 lacosmic() - Iteration 1 -- 8198 pixels identified as cosmic rays (8198 new)
[WORK IN ]::
[PROGRESS]:: procimg.py 353 lacosmic() - The following algorithm would be better on the rectified, tilts-corrected image
[INFO]    :: procimg.py 365 lacosmic() - Growing cosmic ray mask by 1 pixel
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=618595 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.002        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.002, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=618607 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.082     2574        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.039     2682        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.038     2693        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.038     2694        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   1.038     2694        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  5 iterations: reduced_chi =    1.038, rejected =    2694, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 400 trace_objects_in_slit() - Found 2 objects
[INFO]    :: artrace.py 401 trace_objects_in_slit() - Tracing 2 objects
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 448 trace_objects_in_slit() - Converting object traces to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 2 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=559279 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.002        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.002, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=559291 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.076     2124        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.038     2174        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.037     2175        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.037     2175        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  4 iterations: reduced_chi =    1.037, rejected =    2175, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 400 trace_objects_in_slit() - Found 2 objects
[INFO]    :: artrace.py 401 trace_objects_in_slit() - Tracing 2 objects
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 448 trace_objects_in_slit() - Converting object traces to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 2 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 275 boxcar() - Performing boxcar extraction
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 1/2 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 2/2 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: scienceimage.py 358 extraction() - Update model variance image (and trace?) and repeat
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[WORK IN ]::
[PROGRESS]:: wave.py 275 flexure_obj() - Consider doing 2 passes in flexure as in LowRedux
[INFO]    :: wave.py 291 flexure_obj() - Working on flexure in slit (if an object was detected): 0
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=559.169
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of -0.0412817 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]             
   int64                   float64                 ...                float64                
----------- -------------------------------------- ... --------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 195.0813473511995 .. 194.0539969700853
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]             
   int64                   float64                 ...                float64                
----------- -------------------------------------- ... --------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 195.0813473511995 .. 194.0539969700853
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=556.054
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of -0.0432573 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 213.36896930801095 .. 212.6207240410246
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 213.36896930801095 .. 212.6207240410246
[INFO]    :: arms.py 241 ARMS() - Performing a heliocentric correction
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]             
   int64                   float64                 ...                float64                
----------- -------------------------------------- ... --------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 195.0813473511995 .. 194.0539969700853
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]             
   int64                   float64                 ...                float64                
----------- -------------------------------------- ... --------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 195.0813473511995 .. 194.0539969700853
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 213.36896930801095 .. 212.6207240410246
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 213.36896930801095 .. 212.6207240410246
[INFO]    :: arms.py 280 ARMS() - Processing standard star
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1624+4249_KASTb_2018Aug18T045019.09.fits
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[INFO]    :: save.py 731 save_2d_images() - Wrote: Science/spec2d_J1624+4249_KASTb_2018Aug18T045019.09.fits
[INFO]    :: arms.py 102 ARMS() - Reducing file b124.fits, target J1624+4249
[INFO]    :: arms.py 114 ARMS() - Working on detector 1
[INFO]    :: calibrations.py 223 get_bias() - Reloading the bias from the internal dict
[INFO]    :: pixels.py 37 gen_pixloc() - Deriving physical pixel locations on the detector
[INFO]    :: pixels.py 40 gen_pixloc() - Pixel gap in the dispersion direction = 0.000
[INFO]    :: pixels.py 41 gen_pixloc() - Pixel size in the dispersion direction = 1.000
[INFO]    :: pixels.py 44 gen_pixloc() - Pixel gap in the spatial direction = 0.000
[INFO]    :: pixels.py 45 gen_pixloc() - Pixel size in the spatial direction = 1.000
[INFO]    :: pixels.py 50 gen_pixloc() - Saving pixel locations
[INFO]    :: arms.py 158 ARMS() - Working on the science frame
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[WARNING] :: procimg.py 456 gain_frame() - Should probably be measuring the gain across the amplifier boundary
[INFO]    :: processimages.py 509 build_rawvarframe() - Generate raw variance frame (from detected counts [flat fielded])
[INFO]    :: procimg.py 235 lacosmic() - Detecting cosmic rays with the L.A.Cosmic algorithm
[INFO]    :: procimg.py 259 lacosmic() - Convolving image with Laplacian kernel
[INFO]    :: procimg.py 267 lacosmic() - Creating noise model
[INFO]    :: procimg.py 274 lacosmic() - Calculating Laplacian signal to noise ratio
[INFO]    :: procimg.py 282 lacosmic() - Selecting candidate cosmic rays
[INFO]    :: procimg.py 287 lacosmic() -  5201 candidate pixels
[INFO]    :: procimg.py 297 lacosmic() - Building fine structure image
[INFO]    :: procimg.py 306 lacosmic() - Removing suspected compact bright objects
[INFO]    :: procimg.py 316 lacosmic() -  4335 remaining candidate pixels
[INFO]    :: procimg.py 320 lacosmic() - Finding neighboring pixels affected by cosmic rays
[INFO]    :: procimg.py 341 lacosmic() -  9098 pixels detected as cosmics
[INFO]    :: procimg.py 350 lacosmic() - Iteration 1 -- 9098 pixels identified as cosmic rays (9098 new)
[WORK IN ]::
[PROGRESS]:: procimg.py 353 lacosmic() - The following algorithm would be better on the rectified, tilts-corrected image
[INFO]    :: procimg.py 365 lacosmic() - Growing cosmic ray mask by 1 pixel
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=618638 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.002        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.002, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=618661 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.085     2665        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.041     2771        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.040     2774        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.039     2774        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  4 iterations: reduced_chi =    1.039, rejected =    2774, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 400 trace_objects_in_slit() - Found 2 objects
[INFO]    :: artrace.py 401 trace_objects_in_slit() - Tracing 2 objects
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 448 trace_objects_in_slit() - Converting object traces to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 2 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=563429 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.002        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.002, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=563450 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.078     2106        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.041     2147        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.040     2148        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.040     2148        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  4 iterations: reduced_chi =    1.040, rejected =    2148, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 400 trace_objects_in_slit() - Found 2 objects
[INFO]    :: artrace.py 401 trace_objects_in_slit() - Tracing 2 objects
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 448 trace_objects_in_slit() - Converting object traces to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 2 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 275 boxcar() - Performing boxcar extraction
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 1/2 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 2/2 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: scienceimage.py 358 extraction() - Update model variance image (and trace?) and repeat
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 2/2 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[WORK IN ]::
[PROGRESS]:: wave.py 275 flexure_obj() - Consider doing 2 passes in flexure as in LowRedux
[INFO]    :: wave.py 291 flexure_obj() - Working on flexure in slit (if an object was detected): 0
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=545.535
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of -0.12676 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]            
   int64                   float64                 ...                float64               
----------- -------------------------------------- ... -------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 193.4106632160091 .. 193.003174555231
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]            
   int64                   float64                 ...                float64               
----------- -------------------------------------- ... -------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 193.4106632160091 .. 193.003174555231
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=543.004
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of -0.127771 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 210.26952320235407 .. 210.11933393521315
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 210.26952320235407 .. 210.11933393521315
[INFO]    :: arms.py 241 ARMS() - Performing a heliocentric correction
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]            
   int64                   float64                 ...                float64               
----------- -------------------------------------- ... -------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 193.4106632160091 .. 193.003174555231
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...              trace [2048]            
   int64                   float64                 ...                float64               
----------- -------------------------------------- ... -------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 193.4106632160091 .. 193.003174555231
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 210.26952320235407 .. 210.11933393521315
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 210.26952320235407 .. 210.11933393521315
[INFO]    :: arms.py 280 ARMS() - Processing standard star
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1624+4249_KASTb_2018Aug18T052328.09.fits
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[INFO]    :: save.py 731 save_2d_images() - Wrote: Science/spec2d_J1624+4249_KASTb_2018Aug18T052328.09.fits
[INFO]    :: arms.py 102 ARMS() - Reducing file b125.fits, target J1622+4229
[INFO]    :: arms.py 114 ARMS() - Working on detector 1
[INFO]    :: calibrations.py 223 get_bias() - Reloading the bias from the internal dict
[INFO]    :: pixels.py 37 gen_pixloc() - Deriving physical pixel locations on the detector
[INFO]    :: pixels.py 40 gen_pixloc() - Pixel gap in the dispersion direction = 0.000
[INFO]    :: pixels.py 41 gen_pixloc() - Pixel size in the dispersion direction = 1.000
[INFO]    :: pixels.py 44 gen_pixloc() - Pixel gap in the spatial direction = 0.000
[INFO]    :: pixels.py 45 gen_pixloc() - Pixel size in the spatial direction = 1.000
[INFO]    :: pixels.py 50 gen_pixloc() - Saving pixel locations
[INFO]    :: arms.py 158 ARMS() - Working on the science frame
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[WARNING] :: procimg.py 456 gain_frame() - Should probably be measuring the gain across the amplifier boundary
[INFO]    :: processimages.py 509 build_rawvarframe() - Generate raw variance frame (from detected counts [flat fielded])
[INFO]    :: procimg.py 235 lacosmic() - Detecting cosmic rays with the L.A.Cosmic algorithm
[INFO]    :: procimg.py 259 lacosmic() - Convolving image with Laplacian kernel
[INFO]    :: procimg.py 267 lacosmic() - Creating noise model
[INFO]    :: procimg.py 274 lacosmic() - Calculating Laplacian signal to noise ratio
[INFO]    :: procimg.py 282 lacosmic() - Selecting candidate cosmic rays
[INFO]    :: procimg.py 287 lacosmic() -  6565 candidate pixels
[INFO]    :: procimg.py 297 lacosmic() - Building fine structure image
[INFO]    :: procimg.py 306 lacosmic() - Removing suspected compact bright objects
[INFO]    :: procimg.py 316 lacosmic() -  5355 remaining candidate pixels
[INFO]    :: procimg.py 320 lacosmic() - Finding neighboring pixels affected by cosmic rays
[INFO]    :: procimg.py 341 lacosmic() - 11533 pixels detected as cosmics
[INFO]    :: procimg.py 350 lacosmic() - Iteration 1 -- 11533 pixels identified as cosmic rays (11533 new)
[WORK IN ]::
[PROGRESS]:: procimg.py 353 lacosmic() - The following algorithm would be better on the rectified, tilts-corrected image
[INFO]    :: procimg.py 365 lacosmic() - Growing cosmic ray mask by 1 pixel
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=618673 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.002        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.002, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=618710 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.108     3478        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.048     3592        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.046     3596        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.046     3596        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  4 iterations: reduced_chi =    1.046, rejected =    3596, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 397 trace_objects_in_slit() - Found 1 object
[INFO]    :: artrace.py 398 trace_objects_in_slit() - Tracing 1 object
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 446 trace_objects_in_slit() - Converting object trace to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 1 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=581855 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.002        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.002, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=581891 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.067     2130        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.030     2176        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.029     2177        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.029     2177        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  4 iterations: reduced_chi =    1.029, rejected =    2177, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 397 trace_objects_in_slit() - Found 1 object
[INFO]    :: artrace.py 398 trace_objects_in_slit() - Tracing 1 object
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 446 trace_objects_in_slit() - Converting object trace to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 1 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 275 boxcar() - Performing boxcar extraction
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 1/1 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: scienceimage.py 358 extraction() - Update model variance image (and trace?) and repeat
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[WORK IN ]::
[PROGRESS]:: wave.py 275 flexure_obj() - Consider doing 2 passes in flexure as in LowRedux
[INFO]    :: wave.py 291 flexure_obj() - Working on flexure in slit (if an object was detected): 0
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=539.685
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of -0.163988 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 190.3266073838796 .. 190.73432362573516
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 190.3266073838796 .. 190.73432362573516
[INFO]    :: arms.py 241 ARMS() - Performing a heliocentric correction
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 190.3266073838796 .. 190.73432362573516
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 190.3266073838796 .. 190.73432362573516
[INFO]    :: arms.py 280 ARMS() - Processing standard star
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1622+4229_KASTb_2018Aug18T055847.74.fits
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[INFO]    :: save.py 731 save_2d_images() - Wrote: Science/spec2d_J1622+4229_KASTb_2018Aug18T055847.74.fits
[INFO]    :: arms.py 102 ARMS() - Reducing file b126.fits, target J1622+4229
[INFO]    :: arms.py 114 ARMS() - Working on detector 1
[INFO]    :: calibrations.py 223 get_bias() - Reloading the bias from the internal dict
[INFO]    :: pixels.py 37 gen_pixloc() - Deriving physical pixel locations on the detector
[INFO]    :: pixels.py 40 gen_pixloc() - Pixel gap in the dispersion direction = 0.000
[INFO]    :: pixels.py 41 gen_pixloc() - Pixel size in the dispersion direction = 1.000
[INFO]    :: pixels.py 44 gen_pixloc() - Pixel gap in the spatial direction = 0.000
[INFO]    :: pixels.py 45 gen_pixloc() - Pixel size in the spatial direction = 1.000
[INFO]    :: pixels.py 50 gen_pixloc() - Saving pixel locations
[INFO]    :: arms.py 158 ARMS() - Working on the science frame
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[WARNING] :: procimg.py 456 gain_frame() - Should probably be measuring the gain across the amplifier boundary
[INFO]    :: processimages.py 509 build_rawvarframe() - Generate raw variance frame (from detected counts [flat fielded])
[INFO]    :: procimg.py 235 lacosmic() - Detecting cosmic rays with the L.A.Cosmic algorithm
[INFO]    :: procimg.py 259 lacosmic() - Convolving image with Laplacian kernel
[INFO]    :: procimg.py 267 lacosmic() - Creating noise model
[INFO]    :: procimg.py 274 lacosmic() - Calculating Laplacian signal to noise ratio
[INFO]    :: procimg.py 282 lacosmic() - Selecting candidate cosmic rays
[INFO]    :: procimg.py 287 lacosmic() - 13120 candidate pixels
[INFO]    :: procimg.py 297 lacosmic() - Building fine structure image
[INFO]    :: procimg.py 306 lacosmic() - Removing suspected compact bright objects
[INFO]    :: procimg.py 316 lacosmic() - 10138 remaining candidate pixels
[INFO]    :: procimg.py 320 lacosmic() - Finding neighboring pixels affected by cosmic rays
[INFO]    :: procimg.py 341 lacosmic() - 21667 pixels detected as cosmics
[INFO]    :: procimg.py 350 lacosmic() - Iteration 1 -- 21667 pixels identified as cosmic rays (21667 new)
[WORK IN ]::
[PROGRESS]:: procimg.py 353 lacosmic() - The following algorithm would be better on the rectified, tilts-corrected image
[INFO]    :: procimg.py 365 lacosmic() - Growing cosmic ray mask by 1 pixel
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=618516 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.002        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.002, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=618604 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.098     3253        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.043     3372        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.041     3383        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.041     3383        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  4 iterations: reduced_chi =    1.041, rejected =    3383, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 397 trace_objects_in_slit() - Found 1 object
[INFO]    :: artrace.py 398 trace_objects_in_slit() - Tracing 1 object
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 446 trace_objects_in_slit() - Converting object trace to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 1 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=581683 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.002        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.002, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=581768 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.064     2123        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.027     2163        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.026     2165        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.026     2165        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  4 iterations: reduced_chi =    1.026, rejected =    2165, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 397 trace_objects_in_slit() - Found 1 object
[INFO]    :: artrace.py 398 trace_objects_in_slit() - Tracing 1 object
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 446 trace_objects_in_slit() - Converting object trace to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 1 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 275 boxcar() - Performing boxcar extraction
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 1/1 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: scienceimage.py 358 extraction() - Update model variance image (and trace?) and repeat
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[WORK IN ]::
[PROGRESS]:: wave.py 275 flexure_obj() - Consider doing 2 passes in flexure as in LowRedux
[INFO]    :: wave.py 291 flexure_obj() - Working on flexure in slit (if an object was detected): 0
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=543.886
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of -0.239319 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 188.07767979470836 .. 189.78250925437175
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 188.07767979470836 .. 189.78250925437175
[INFO]    :: arms.py 241 ARMS() - Performing a heliocentric correction
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 188.07767979470836 .. 189.78250925437175
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 188.07767979470836 .. 189.78250925437175
[INFO]    :: arms.py 280 ARMS() - Processing standard star
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1622+4229_KASTb_2018Aug18T062916.96.fits
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[INFO]    :: save.py 731 save_2d_images() - Wrote: Science/spec2d_J1622+4229_KASTb_2018Aug18T062916.96.fits
[INFO]    :: arms.py 102 ARMS() - Reducing file b127.fits, target J1622+4229
[INFO]    :: arms.py 114 ARMS() - Working on detector 1
[INFO]    :: calibrations.py 223 get_bias() - Reloading the bias from the internal dict
[INFO]    :: pixels.py 37 gen_pixloc() - Deriving physical pixel locations on the detector
[INFO]    :: pixels.py 40 gen_pixloc() - Pixel gap in the dispersion direction = 0.000
[INFO]    :: pixels.py 41 gen_pixloc() - Pixel size in the dispersion direction = 1.000
[INFO]    :: pixels.py 44 gen_pixloc() - Pixel gap in the spatial direction = 0.000
[INFO]    :: pixels.py 45 gen_pixloc() - Pixel size in the spatial direction = 1.000
[INFO]    :: pixels.py 50 gen_pixloc() - Saving pixel locations
[INFO]    :: arms.py 158 ARMS() - Working on the science frame
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[WARNING] :: procimg.py 456 gain_frame() - Should probably be measuring the gain across the amplifier boundary
[INFO]    :: processimages.py 509 build_rawvarframe() - Generate raw variance frame (from detected counts [flat fielded])
[INFO]    :: procimg.py 235 lacosmic() - Detecting cosmic rays with the L.A.Cosmic algorithm
[INFO]    :: procimg.py 259 lacosmic() - Convolving image with Laplacian kernel
[INFO]    :: procimg.py 267 lacosmic() - Creating noise model
[INFO]    :: procimg.py 274 lacosmic() - Calculating Laplacian signal to noise ratio
[INFO]    :: procimg.py 282 lacosmic() - Selecting candidate cosmic rays
[INFO]    :: procimg.py 287 lacosmic() - 10531 candidate pixels
[INFO]    :: procimg.py 297 lacosmic() - Building fine structure image
[INFO]    :: procimg.py 306 lacosmic() - Removing suspected compact bright objects
[INFO]    :: procimg.py 316 lacosmic() -  8770 remaining candidate pixels
[INFO]    :: procimg.py 320 lacosmic() - Finding neighboring pixels affected by cosmic rays
[INFO]    :: procimg.py 341 lacosmic() - 17792 pixels detected as cosmics
[INFO]    :: procimg.py 350 lacosmic() - Iteration 1 -- 17792 pixels identified as cosmic rays (17792 new)
[WORK IN ]::
[PROGRESS]:: procimg.py 353 lacosmic() - The following algorithm would be better on the rectified, tilts-corrected image
[INFO]    :: procimg.py 365 lacosmic() - Growing cosmic ray mask by 1 pixel
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=618580 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.002        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.002, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=618679 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.070     3024        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.018     3099        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.017     3106        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.017     3108        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   1.017     3108        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  5 iterations: reduced_chi =    1.017, rejected =    3108, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 397 trace_objects_in_slit() - Found 1 object
[INFO]    :: artrace.py 398 trace_objects_in_slit() - Tracing 1 object
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 446 trace_objects_in_slit() - Converting object trace to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 1 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=577646 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.002        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.002, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=577738 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.035     1876        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.002     1905        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.001     1908        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.001     1908        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  4 iterations: reduced_chi =    1.001, rejected =    1908, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 397 trace_objects_in_slit() - Found 1 object
[INFO]    :: artrace.py 398 trace_objects_in_slit() - Tracing 1 object
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 446 trace_objects_in_slit() - Converting object trace to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 1 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 275 boxcar() - Performing boxcar extraction
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 1/1 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: scienceimage.py 358 extraction() - Update model variance image (and trace?) and repeat
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[WORK IN ]::
[PROGRESS]:: wave.py 275 flexure_obj() - Consider doing 2 passes in flexure as in LowRedux
[INFO]    :: wave.py 291 flexure_obj() - Working on flexure in slit (if an object was detected): 0
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=577.813
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of -0.297695 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 188.9892041421454 .. 193.14287090215453
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 188.9892041421454 .. 193.14287090215453
[INFO]    :: arms.py 241 ARMS() - Performing a heliocentric correction
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 188.9892041421454 .. 193.14287090215453
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 188.9892041421454 .. 193.14287090215453
[INFO]    :: arms.py 280 ARMS() - Processing standard star
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1622+4229_KASTb_2018Aug18T070237.01.fits
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[INFO]    :: save.py 731 save_2d_images() - Wrote: Science/spec2d_J1622+4229_KASTb_2018Aug18T070237.01.fits
[INFO]    :: arms.py 102 ARMS() - Reducing file b128.fits, target J2244+0147
[INFO]    :: arms.py 114 ARMS() - Working on detector 1
[INFO]    :: calibrations.py 223 get_bias() - Reloading the bias from the internal dict
[INFO]    :: pixels.py 37 gen_pixloc() - Deriving physical pixel locations on the detector
[INFO]    :: pixels.py 40 gen_pixloc() - Pixel gap in the dispersion direction = 0.000
[INFO]    :: pixels.py 41 gen_pixloc() - Pixel size in the dispersion direction = 1.000
[INFO]    :: pixels.py 44 gen_pixloc() - Pixel gap in the spatial direction = 0.000
[INFO]    :: pixels.py 45 gen_pixloc() - Pixel size in the spatial direction = 1.000
[INFO]    :: pixels.py 50 gen_pixloc() - Saving pixel locations
[INFO]    :: arms.py 158 ARMS() - Working on the science frame
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[WARNING] :: procimg.py 456 gain_frame() - Should probably be measuring the gain across the amplifier boundary
[INFO]    :: processimages.py 509 build_rawvarframe() - Generate raw variance frame (from detected counts [flat fielded])
[INFO]    :: procimg.py 235 lacosmic() - Detecting cosmic rays with the L.A.Cosmic algorithm
[INFO]    :: procimg.py 259 lacosmic() - Convolving image with Laplacian kernel
[INFO]    :: procimg.py 267 lacosmic() - Creating noise model
[INFO]    :: procimg.py 274 lacosmic() - Calculating Laplacian signal to noise ratio
[INFO]    :: procimg.py 282 lacosmic() - Selecting candidate cosmic rays
[INFO]    :: procimg.py 287 lacosmic() -  1205 candidate pixels
[INFO]    :: procimg.py 297 lacosmic() - Building fine structure image
[INFO]    :: procimg.py 306 lacosmic() - Removing suspected compact bright objects
[INFO]    :: procimg.py 316 lacosmic() -  1112 remaining candidate pixels
[INFO]    :: procimg.py 320 lacosmic() - Finding neighboring pixels affected by cosmic rays
[INFO]    :: procimg.py 341 lacosmic() -  2284 pixels detected as cosmics
[INFO]    :: procimg.py 350 lacosmic() - Iteration 1 -- 2284 pixels identified as cosmic rays (2284 new)
[WORK IN ]::
[PROGRESS]:: procimg.py 353 lacosmic() - The following algorithm would be better on the rectified, tilts-corrected image
[INFO]    :: procimg.py 365 lacosmic() - Growing cosmic ray mask by 1 pixel
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=617354 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.011        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.011, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=618060 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.283     5027        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   0.928     5221        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   0.925     5233        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   0.925     5233        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  4 iterations: reduced_chi =    0.925, rejected =    5233, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 397 trace_objects_in_slit() - Found 1 object
[INFO]    :: artrace.py 398 trace_objects_in_slit() - Tracing 1 object
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 446 trace_objects_in_slit() - Converting object trace to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 1 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=568254 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.012        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.012, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=568952 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.005     2777        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   0.902     2814        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   0.901     2814        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  3 iterations: reduced_chi =    0.901, rejected =    2814, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 397 trace_objects_in_slit() - Found 1 object
[INFO]    :: artrace.py 398 trace_objects_in_slit() - Tracing 1 object
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 446 trace_objects_in_slit() - Converting object trace to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 1 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 275 boxcar() - Performing boxcar extraction
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 1/1 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: scienceimage.py 358 extraction() - Update model variance image (and trace?) and repeat
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/1 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[WORK IN ]::
[PROGRESS]:: wave.py 275 flexure_obj() - Consider doing 2 passes in flexure as in LowRedux
[INFO]    :: wave.py 291 flexure_obj() - Working on flexure in slit (if an object was detected): 0
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=583.74
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of 0.525347 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 191.99451429888109 .. 188.06640652526875
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 191.99451429888109 .. 188.06640652526875
[INFO]    :: arms.py 241 ARMS() - Performing a heliocentric correction
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 191.99451429888109 .. 188.06640652526875
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 191.99451429888109 .. 188.06640652526875
[INFO]    :: arms.py 280 ARMS() - Processing standard star
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J2244+0147_KASTb_2018Aug18T074024.39.fits
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[INFO]    :: save.py 731 save_2d_images() - Wrote: Science/spec2d_J2244+0147_KASTb_2018Aug18T074024.39.fits
[INFO]    :: arms.py 102 ARMS() - Reducing file b129.fits, target J2244+0147
[INFO]    :: arms.py 114 ARMS() - Working on detector 1
[INFO]    :: calibrations.py 223 get_bias() - Reloading the bias from the internal dict
[INFO]    :: pixels.py 37 gen_pixloc() - Deriving physical pixel locations on the detector
[INFO]    :: pixels.py 40 gen_pixloc() - Pixel gap in the dispersion direction = 0.000
[INFO]    :: pixels.py 41 gen_pixloc() - Pixel size in the dispersion direction = 1.000
[INFO]    :: pixels.py 44 gen_pixloc() - Pixel gap in the spatial direction = 0.000
[INFO]    :: pixels.py 45 gen_pixloc() - Pixel size in the spatial direction = 1.000
[INFO]    :: pixels.py 50 gen_pixloc() - Saving pixel locations
[INFO]    :: arms.py 158 ARMS() - Working on the science frame
[INFO]    :: processimages.py 279 bias_subtract() - Bias subtracting your image(s)
[INFO]    :: processimages.py 286 bias_subtract() - Subtracting bias image from raw frame
[WARNING] :: procimg.py 456 gain_frame() - Should probably be measuring the gain across the amplifier boundary
[INFO]    :: processimages.py 509 build_rawvarframe() - Generate raw variance frame (from detected counts [flat fielded])
[INFO]    :: procimg.py 235 lacosmic() - Detecting cosmic rays with the L.A.Cosmic algorithm
[INFO]    :: procimg.py 259 lacosmic() - Convolving image with Laplacian kernel
[INFO]    :: procimg.py 267 lacosmic() - Creating noise model
[INFO]    :: procimg.py 274 lacosmic() - Calculating Laplacian signal to noise ratio
[INFO]    :: procimg.py 282 lacosmic() - Selecting candidate cosmic rays
[INFO]    :: procimg.py 287 lacosmic() - 13901 candidate pixels
[INFO]    :: procimg.py 297 lacosmic() - Building fine structure image
[INFO]    :: procimg.py 306 lacosmic() - Removing suspected compact bright objects
[INFO]    :: procimg.py 316 lacosmic() - 10965 remaining candidate pixels
[INFO]    :: procimg.py 320 lacosmic() - Finding neighboring pixels affected by cosmic rays
[INFO]    :: procimg.py 341 lacosmic() - 23663 pixels detected as cosmics
[INFO]    :: procimg.py 350 lacosmic() - Iteration 1 -- 23663 pixels identified as cosmic rays (23663 new)
[WORK IN ]::
[PROGRESS]:: procimg.py 353 lacosmic() - The following algorithm would be better on the rectified, tilts-corrected image
[INFO]    :: procimg.py 365 lacosmic() - Growing cosmic ray mask by 1 pixel
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=553809 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.012        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.012, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=589044 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.979     8476        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.187     8966        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.180     9006        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.179     9011        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   1.179     9012        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 6   1.179     9012        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  6 iterations: reduced_chi =    1.179, rejected =    9012, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 400 trace_objects_in_slit() - Found 4 objects
[INFO]    :: artrace.py 401 trace_objects_in_slit() - Tracing 4 objects
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 448 trace_objects_in_slit() - Converting object traces to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 4 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 462 global_skysub() - Working on slit: 0
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=400785 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   0.012        0        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  1 iterations: reduced_chi =    0.012, rejected =       0, relative_factor =   1.00
[INFO]    :: utils.py 191 bspline_profile() - Fitting npoly =  1 profile basis functions, nx=430325 pixels
[INFO]    :: utils.py 192 bspline_profile() - ****************************  Iter  Chi^2  # rejected  Rel. fact   ****************************
[INFO]    :: utils.py 193 bspline_profile() -                               ----  -----  ----------  --------- 
[INFO]    :: utils.py 274 bspline_profile() -                                 1   1.469     6362        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 2   1.117     6513        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 3   1.114     6524        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 4   1.113     6526        1.00
[INFO]    :: utils.py 274 bspline_profile() -                                 5   1.113     6526        1.00
[INFO]    :: utils.py 280 bspline_profile() - ***********************************************************************************************
[INFO]    :: utils.py 283 bspline_profile() - Final fit after  5 iterations: reduced_chi =    1.113, rejected =    6526, relative_factor =   1.00
[INFO]    :: scienceimage.py 476 global_skysub() - Building model variance from the Sky frame
[INFO]    :: scienceimage.py 404 find_objects() - Finding objects in slit: 0
[INFO]    :: artrace.py 276 trace_objects_in_slit() - Rectifying science frame
[INFO]    :: artrace.py 297 trace_objects_in_slit() - Estimating object profiles
[INFO]    :: artrace.py 325 trace_objects_in_slit() - Identifying objects that are significantly detected
[WARNING] :: artrace.py 356 trace_objects_in_slit() - Removed objects near the slit edges
[INFO]    :: artrace.py 400 trace_objects_in_slit() - Found 4 objects
[INFO]    :: artrace.py 401 trace_objects_in_slit() - Tracing 4 objects
[INFO]    :: artrace.py 437 trace_objects_in_slit() - Performing global trace to all objects
[INFO]    :: artrace.py 440 trace_objects_in_slit() - Constructing a trace for all objects
[INFO]    :: artrace.py 448 trace_objects_in_slit() - Converting object traces to detector pixels
[INFO]    :: artrace.py 85 trace_objbg_image() - Creating an image weighted by object pixels for 4 objects
[INFO]    :: artrace.py 94 trace_objbg_image() - Creating an image weighted by background pixels
[INFO]    :: scienceimage.py 275 boxcar() - Performing boxcar extraction
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 1/4 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 2/4 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 3/4 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: extract.py 1628 boxcar() - Performing boxcar extraction of object 4/4 in slit 1/1
[INFO]    :: extract.py 1637 boxcar() -    Fitting the background
[INFO]    :: extract.py 1669 boxcar() -    Summing object counts
[INFO]    :: extract.py 1672 boxcar() -    Summing variance array
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/4 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 2/4 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 3/4 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 4/4 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/4 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 2/4 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 3/4 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 4/4 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[WARNING] :: extract.py 2015 optimal_extract() - Replacing fully masked regions with mean wavelengths
[INFO]    :: scienceimage.py 358 extraction() - Update model variance image (and trace?) and repeat
[INFO]    :: scienceimage.py 303 original_optimal() - Attempting optimal extraction with model profile
[WORK IN ]::
[PROGRESS]:: extract.py 1763 obj_profiles() - Should probably loop on S/N
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 1/4 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 2/4 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 3/4 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1765 obj_profiles() - Deriving spatial profile of object 4/4 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1791 obj_profiles() - Good S/N for profile
[WORK IN ]::
[PROGRESS]:: extract.py 1801 obj_profiles() - Weight by S/N in boxcar extraction? [avoid CRs; smooth?]
[WORK IN ]::
[PROGRESS]:: extract.py 1810 obj_profiles() - Might give our own guess here instead of using default
[WORK IN ]::
[PROGRESS]:: extract.py 1830 obj_profiles() - Consider flagging/removing CRs here
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 1/4 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 2/4 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 3/4 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[INFO]    :: extract.py 1973 optimal_extract() - Performing optimal extraction of object 4/4 in slit 1/1
[WORK IN ]::
[PROGRESS]:: artrace.py 1716 slit_image() - Use 2D spline to evaluate tilts
[WORK IN ]::
[PROGRESS]:: artrace.py 1721 slit_image() - Should worry about changing plate scale
[WARNING] :: extract.py 2015 optimal_extract() - Replacing fully masked regions with mean wavelengths
[WORK IN ]::
[PROGRESS]:: wave.py 275 flexure_obj() - Consider doing 2 passes in flexure as in LowRedux
[INFO]    :: wave.py 291 flexure_obj() - Working on flexure in slit (if an object was detected): 0
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=587.209
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of 0.519092 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 189.10723131515644 .. 188.98407678714923
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 189.10723131515644 .. 188.98407678714923
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=589.498
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of 0.517371 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 248.49570582737397 .. 249.2789363392455
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 248.49570582737397 .. 249.2789363392455
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=585.477
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of 0.521729 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 163.18942038903407 .. 162.6707090415802
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 163.18942038903407 .. 162.6707090415802
[WARNING] :: wave.py 44 flex_shift() - If we use Paranal, cut down on wavelength early on
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: arc.py 207 detect_lines() - Detecting lines
[INFO]    :: arc.py 218 detect_lines() - Detecting the strongest, nonsaturated lines
[INFO]    :: wave.py 72 flex_shift() - Resolution of Archive=607.431 and Observation=630.599
[WARNING] :: wave.py 86 flex_shift() - Prefer archival sky spectrum to have higher resolution
[WARNING] :: wave.py 88 flex_shift() - New Sky has higher resolution than Archive.  Not smoothing
[WORK IN ]::
[PROGRESS]:: wave.py 137 flex_shift() - Need to mask bad pixels
[WORK IN ]::
[PROGRESS]:: wave.py 140 flex_shift() - Consider taking median first [5 pixel]
[WORK IN ]::
[PROGRESS]:: wave.py 153 flex_shift() - Consider taking median first [5 pixel]
[INFO]    :: wave.py 172 flex_shift() - Flexure correction of 0.470423 pixels
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 279.50312174251354 .. 280.7595864659323
[INFO]    :: wave.py 318 flexure_obj() - Applying flexure correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 279.50312174251354 .. 280.7595864659323
[INFO]    :: arms.py 241 ARMS() - Performing a heliocentric correction
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 189.10723131515644 .. 188.98407678714923
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]              
   int64                   float64                 ...                 float64                 
----------- -------------------------------------- ... ----------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 189.10723131515644 .. 188.98407678714923
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 248.49570582737397 .. 249.2789363392455
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 248.49570582737397 .. 249.2789363392455
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 163.18942038903407 .. 162.6707090415802
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 163.18942038903407 .. 162.6707090415802
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to boxcar extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 279.50312174251354 .. 280.7595864659323
[INFO]    :: wave.py 392 geomotion_correct() - Applying heliocentric correction to optimal extraction for object:
             <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 279.50312174251354 .. 280.7595864659323
[INFO]    :: arms.py 280 ARMS() - Processing standard star
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J2244+0147_KASTb_2018Aug18T075955.41.fits
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[WARNING] :: parse.py 648 parse_binning() - Unable to parse input binning: None
[WARNING] :: parse.py 649 parse_binning() - Assuming unbinned, i.e.  1x1
[INFO]    :: save.py 731 save_2d_images() - Wrote: Science/spec2d_J2244+0147_KASTb_2018Aug18T075955.41.fits
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_P330E_KASTb_2018Aug18T034056.55.fits
[INFO]    :: arms.py 392 ARMS() - Taking one star per detector mosaic
[INFO]    :: arms.py 393 ARMS() - Waited until very end to work on it
[WARNING] :: arms.py 394 ARMS() - You should probably consider using the pypeit_flux_spec script anyhow...
[INFO]    :: fluxspec.py 130 __init__() - Spectrograph set to <ShaneKastBlueSpectrograph:  spectrograph=shane_kast_blue, camera=KASTb>, from argument object
[INFO]    :: flux.py 367 load_extinction_data() - Using mthamextinct.dat for extinction corrections.
[INFO]    :: flux.py 443 find_standard() - Putative standard star <Table length=1>
 shape [2]            slit_spat_pos [2]            ...               trace [2048]             
   int64                   float64                 ...                 float64                
----------- -------------------------------------- ... ---------------------------------------
2048 .. 380 42.42965981582709 .. 350.4547824077908 ... 194.4838771072742 .. 193.96763529114153 has a median boxcar count of 2238.0163655804417
[INFO]    :: flux.py 300 find_standard_file() - Using standard star P330E
[INFO]    :: flux.py 404 load_standard_file() - Loading standard star file: /Users/astro/anaconda3/pkgs/PypeIt/pypeit/data/standards/calspec/p330e_stisnic_002.fits.gz
[INFO]    :: flux.py 405 load_standard_file() - Fluxes are flambda, normalized to 1e-17
[INFO]    :: flux.py 507 generate_sensfunc() - Masking edges
[WARNING] :: flux.py 513 generate_sensfunc() - Should pull resolution from arc line analysis
[INFO]    :: flux.py 517 generate_sensfunc() - Masking Balmer
[INFO]    :: flux.py 525 generate_sensfunc() - Masking Telluric
[INFO]    :: flux.py 532 generate_sensfunc() - Masking Below the atmospheric cutoff
[INFO]    :: flux.py 203 bspline_magfit() - Difference between fits is 0.00304444
[WORK IN ]::
[PROGRESS]:: flux.py 206 bspline_magfit() - Add QA for sensitivity function
[INFO]    :: fluxspec.py 391 save_master() - Wrote sensfunc to MasterFrame: /Users/astro/Desktop/GitHub/HSC_BCG_specz/Redux/2018Aug17/MF_shane_kast_blue/MasterSensFunc_A_aa.yaml
[INFO]    :: arms.py 416 ARMS() - Fluxing with P330E
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 196.51733067745897 .. 194.98836840743505
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 196.51733067745897 .. 194.98836840743505
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1620+4333_KASTb_2018Aug18T041551.92.fits
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...              trace [2048]             
   int64          float64      ...                float64                
------------ ----------------- ... --------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 195.0813473511995 .. 194.0539969700853
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...              trace [2048]             
   int64          float64      ...                float64                
------------ ----------------- ... --------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 195.0813473511995 .. 194.0539969700853
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]             
   int64          float64      ...                 float64                
------------ ----------------- ... ---------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 213.36896930801095 .. 212.6207240410246
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]             
   int64          float64      ...                 float64                
------------ ----------------- ... ---------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 213.36896930801095 .. 212.6207240410246
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1624+4249_KASTb_2018Aug18T045019.09.fits
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...              trace [2048]            
   int64          float64      ...                float64               
------------ ----------------- ... -------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 193.4106632160091 .. 193.003174555231
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...              trace [2048]            
   int64          float64      ...                float64               
------------ ----------------- ... -------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 193.4106632160091 .. 193.003174555231
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 210.26952320235407 .. 210.11933393521315
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 210.26952320235407 .. 210.11933393521315
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1624+4249_KASTb_2018Aug18T052328.09.fits
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]             
   int64          float64      ...                 float64                
------------ ----------------- ... ---------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 190.3266073838796 .. 190.73432362573516
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]             
   int64          float64      ...                 float64                
------------ ----------------- ... ---------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 190.3266073838796 .. 190.73432362573516
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1622+4229_KASTb_2018Aug18T055847.74.fits
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 188.07767979470836 .. 189.78250925437175
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 188.07767979470836 .. 189.78250925437175
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1622+4229_KASTb_2018Aug18T062916.96.fits
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]             
   int64          float64      ...                 float64                
------------ ----------------- ... ---------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 188.9892041421454 .. 193.14287090215453
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]             
   int64          float64      ...                 float64                
------------ ----------------- ... ---------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 188.9892041421454 .. 193.14287090215453
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J1622+4229_KASTb_2018Aug18T070237.01.fits
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 191.99451429888109 .. 188.06640652526875
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 191.99451429888109 .. 188.06640652526875
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J2244+0147_KASTb_2018Aug18T074024.39.fits
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 189.10723131515644 .. 188.98407678714923
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]              
   int64          float64      ...                 float64                 
------------ ----------------- ... ----------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 189.10723131515644 .. 188.98407678714923
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]             
   int64          float64      ...                 float64                
------------ ----------------- ... ---------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 248.49570582737397 .. 249.2789363392455
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]             
   int64          float64      ...                 float64                
------------ ----------------- ... ---------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 248.49570582737397 .. 249.2789363392455
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]             
   int64          float64      ...                 float64                
------------ ----------------- ... ---------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 163.18942038903407 .. 162.6707090415802
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]             
   int64          float64      ...                 float64                
------------ ----------------- ... ---------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 163.18942038903407 .. 162.6707090415802
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing boxcar extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]             
   int64          float64      ...                 float64                
------------ ----------------- ... ---------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 279.50312174251354 .. 280.7595864659323
[INFO]    :: flux.py 46 apply_sensfunc() - Fluxing optimal extraction for:
             <Table length=1>
 shape [2]   slit_spat_pos [2] ...               trace [2048]             
   int64          float64      ...                 float64                
------------ ----------------- ... ---------------------------------------
2048 .. 1024  0.0001 .. 0.0001 ... 279.50312174251354 .. 280.7595864659323
[INFO]    :: save.py 452 save_1d_spectra_fits() - Wrote 1D spectra to Science/spec1d_J2244+0147_KASTb_2018Aug18T075955.41.fits
[INFO]    :: pypeit.py 126 PypeIt() - Data reduction complete
[INFO]    :: pypeit.py 128 PypeIt() - Generating QA HTML
[INFO]    :: pypeit.py 142 PypeIt() - Data reduction execution time: 3m 39.33s
